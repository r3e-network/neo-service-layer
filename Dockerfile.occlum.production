# Production Dockerfile for Occlum with Intel SGX
FROM occlum/occlum:0.30.1-ubuntu20.04 AS builder

# Install .NET 9 SDK
RUN apt-get update && \
    apt-get install -y wget && \
    wget https://dot.net/v1/dotnet-install.sh && \
    chmod +x dotnet-install.sh && \
    ./dotnet-install.sh --channel 9.0 --install-dir /usr/share/dotnet && \
    ln -s /usr/share/dotnet/dotnet /usr/bin/dotnet && \
    rm dotnet-install.sh

# Install additional dependencies
RUN apt-get install -y \
    git \
    curl \
    build-essential \
    libssl-dev \
    pkg-config \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /workspace

# Copy solution files first for better caching
COPY *.sln .
COPY Directory.*.props .
COPY Directory.*.targets .
COPY NuGet.Config .

# Copy project files
COPY src/ src/
COPY tests/ tests/

# Restore dependencies
RUN dotnet restore

# Build the solution in Release mode
RUN dotnet build --configuration Release --no-restore

# Publish the applications
RUN dotnet publish src/Api/NeoServiceLayer.Api/NeoServiceLayer.Api.csproj \
    --configuration Release \
    --no-build \
    --output /app/api

# Create production Occlum instance
FROM occlum/occlum:0.30.1-ubuntu20.04

# Install runtime dependencies only
RUN apt-get update && \
    apt-get install -y \
    ca-certificates \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create Occlum instance
WORKDIR /occlum_instance
RUN occlum init

# Copy production configuration
COPY occlum_config.production.json ./Occlum.json

# Copy .NET runtime and application
COPY --from=builder /usr/share/dotnet /occlum_instance/image/opt/dotnet
COPY --from=builder /app /occlum_instance/image/app

# Copy trusted certificates
RUN mkdir -p /occlum_instance/image/etc/ssl/certs && \
    cp -r /etc/ssl/certs/* /occlum_instance/image/etc/ssl/certs/

# Build Occlum image with production settings
RUN occlum build \
    --sgx-mode HW \
    --sign-tool /opt/intel/sgxsdk/bin/x64/sgx_sign

# Create non-root user for running the enclave
RUN useradd -m -u 1000 -s /bin/bash occlum_user && \
    chown -R occlum_user:occlum_user /occlum_instance

USER occlum_user

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f https://localhost/health || exit 1

# Expose ports
EXPOSE 80 443

# Set production environment variables
ENV ASPNETCORE_ENVIRONMENT=Production \
    SGX_MODE=HW \
    SGX_DEBUG=false \
    DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=1

# Run with Occlum in hardware mode
CMD ["occlum", "run", "/opt/dotnet/dotnet", "/app/api/NeoServiceLayer.Api.dll"]