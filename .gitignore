# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Ww][Ii][Nn]32/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/
[Ll]ogs/
artifacts/

# Temporary folders and files
.tmp*/
.temp*/
temp/
tmp/
*.tmp
*.temp
*.stackdump
*.dmp
*.swp
*.swo
*~

# IDE and Editor files
.cursor/
.vs/
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace
.history/
.idea/
*.sln.iml
.localhistory/
.vshistory/

# Visual Studio 2017 auto generated files
Generated\ Files/
Generated_Code/

# User-specific files
*.user
*.suo
*.userosscache
*.sln.docstates
*.userprefs

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*
TestResult.xml
nunit-*.xml

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

# Benchmark Results
BenchmarkDotNet.Artifacts/

# .NET Core
project.lock.json
project.fragment.lock.json

# ASP.NET Scaffolding
ScaffoldingReadMe.txt

# StyleCop
StyleCopReport.xml

# Files built by Visual Studio
*_i.c
*_p.c
*_h.h
*.ilk
*.meta
*.obj
*.iobj
*.pch
*.pdb
*.ipdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp_proj
*_wpftmp.csproj
*.log
*.tlog
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc
*.booproj
*.svd
*.opensdf
*.sdf
*.cachefile
*.VC.db
*.VC.VC.opendb

# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap

# Visual Studio Trace Files
*.e2e

# TFS 2012 Local Workspace
$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user
*.resharper

# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

# AxoCover is a Code Coverage Tool
.axoCover/*
!.axoCover/settings.json

# Coverlet is a free, cross platform Code Coverage Tool
coverage*.json
coverage*.xml
coverage*.info

# Visual Studio code coverage results
*.coverage
*.coveragexml

# NCrunch
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*
*.ncrunch*
*.crunch*.local.xml

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# Note: Comment the next line if you want to checkin your web deploy settings,
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
PublishScripts/

# NuGet Packages
*.nupkg
# NuGet Symbol Packages
*.snupkg
# The packages folder can be ignored because of Package Restore
**/[Pp]ackages/*
# except build/, which is used as an MSBuild target.
!**/[Pp]ackages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/[Pp]ackages/repositories.config
# NuGet v3's project.json files produces more ignorable files
*.nuget.props
*.nuget.targets

# Microsoft Azure Build Output
csx/
*.build.csdef

# Microsoft Azure Emulator
ecf/
rcf/

# Windows Store app package directories and files
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt
*.appx
*.appxbundle
*.appxupload

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!?*.[Cc]ache/

# Others
ClientBin/
~$*
*.dbmdl
*.dbproj.schemaview
*.jfm
*.pfx
*.publishsettings
orleans.codegen.cs

# Including strong name files can present a security risk
# (https://github.com/github/gitignore/pull/2483#issue-259490424)
#*.snk

# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/

# RIA/Silverlight projects
Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm
ServiceFabricBackup/
*.rptproj.bak

# SQL Server files
*.mdf
*.ldf
*.ndf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings
*.rptproj.rsuser
*- [Bb]ackup.rdl
*- [Bb]ackup ([0-9]).rdl
*- [Bb]ackup ([0-9][0-9]).rdl

# Microsoft Fakes
FakesAssemblies/

# GhostDoc plugin setting file
*.GhostDoc.xml

# Node.js Tools for Visual Studio
.ntvs_analysis.dat
node_modules/

# Visual Studio 6 build log
*.plg

# Visual Studio 6 workspace options file
*.opt

# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
*.vbw

# Visual Studio 6 auto-generated project file (contains which files were open etc.)
*.vbp

# Visual Studio 6 workspace and project file (working project files containing files to include in project)
*.dsw
*.dsp

# Visual Studio 6 technical files
*.ncb
*.aps

# Visual Studio LightSwitch build output
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions

# Paket dependency manager
.paket/paket.exe
paket-files/

# FAKE - F# Make
.fake/

# CodeRush personal settings
.cr/personal

# Python Tools for Visual Studio (PTVS)
__pycache__/
*.pyc

# Cake - Uncomment if you are using it
# tools/**
# !tools/packages.config

# Tabs Studio
*.tss

# Telerik's JustMock configuration file
*.jmconfig

# BizTalk build output
*.btp.cs
*.btm.cs
*.odx.cs
*.xsd.cs

# OpenCover UI analysis results
OpenCover/

# Azure Stream Analytics local run output
ASALocalRun/

# MSBuild Binary and Structured Log
*.binlog

# NVidia Nsight GPU debugger configuration file
*.nvuser

# MFractors (Xamarin productivity tool) working folder
.mfractor/

# BeatPulse healthcheck temp database
healthchecksdb

# Backup folder for Package Reference Convert tool in Visual Studio 2017
MigrationBackup/

# Ionide (cross platform F# VS Code tools) working folder
.ionide/

# Fody - auto-generated XML schema
FodyWeavers.xsd

# Windows Installer files from build outputs
*.cab
*.msi
*.msix
*.msm
*.msp

# SGX specific
*.out
*.o
*.so
*.a
*.signed
*.unsigned
*.manifest
*.token
*.sig
*.pub
*.key
*.pem
*.crt
*.cer
*.der
*.p12
*.pfx
*.jks
*.keystore
*.truststore
*.csr
*.srl
*.crl
*.ocall
*.ecall
*.edl
*.h.in
*.c.in
*.cpp.in
*.cc.in
*.cxx.in
*.h.out
*.c.out
*.cpp.out
*.cc.out
*.cxx.out
*.sgx.static_library.configs.mk
*.sgx.trusted_library.configs.mk
*.sgx.untrusted_library.configs.mk
*.sgx.enclave.configs.mk
*.sgx.edl.configs.mk
*.sgx.simulation.configs.mk
*.sgx.hardware.configs.mk
*.sgx.debug.configs.mk
*.sgx.release.configs.mk
*.sgx.asm
*.sgx.bc
*.sgx.ll
*.sgx.o
*.sgx.so
*.sgx.a
*.sgx.signed
*.sgx.unsigned
*.sgx.manifest
*.sgx.token
*.sgx.sig
*.sgx.pub
*.sgx.key
*.sgx.pem
*.sgx.crt
*.sgx.cer
*.sgx.der
*.sgx.p12
*.sgx.pfx
*.sgx.jks
*.sgx.keystore
*.sgx.truststore
*.sgx.csr
*.sgx.srl
*.sgx.crl
*.sgx.ocall
*.sgx.ecall
*.sgx.edl
*.sgx.h.in
*.sgx.c.in
*.sgx.cpp.in
*.sgx.cc.in
*.sgx.cxx.in
*.sgx.h.out
*.sgx.c.out
*.sgx.cpp.out
*.sgx.cc.out
*.sgx.cxx.out

# Additional cleanup patterns
*.tmp
*.temp
*~
.DS_Store
Thumbs.db
*.bak
*.old
*.orig

# Coverage reports
coverage-reports/
coverage-history/
TestResults/
test-results/

# Documentation temporary files
*STATUS*.md
*REPORT*.md
*SUMMARY*.md
*COMPLETE*.md
BUILD_ERROR*.md
COMPREHENSIVE*.md
DEVCONTAINER*.md
DOCKER_CONNECTIVITY*.md
ENCLAVE_INTEGRATION*.md
FINAL_*.md
PRODUCTION_*.md
SGX_ENCLAVE*.md
UNIT_TESTING*.md

# IDE specific
.vscode/settings.json
.vscode/launch.json
.vscode/tasks.json
.vscode/extensions.json

# Rust build artifacts (for Occlum)
target/
Cargo.lock

# Docker build artifacts
.dockerignore.bak

# Temporary scripts
*.ps1.bak
*.sh.bak

# Environment variables and secrets
.env
.env.local
.env.production
.env.staging
.env.development
*.env
appsettings.Secrets.json
secrets.json
.claude-flow/
.swarm/

# Claude Flow generated files
.claude/settings.local.json
.mcp.json
claude-flow.config.json
.swarm/
.hive-mind/
memory/claude-flow-data.json
memory/sessions/*
!memory/sessions/README.md
memory/agents/*
!memory/agents/README.md
coordination/memory_bank/*
coordination/subtasks/*
coordination/orchestration/*
*.db
*.db-journal
*.db-wal
*.sqlite
*.sqlite-journal
*.sqlite-wal
claude-flow
claude-flow.bat
claude-flow.ps1
hive-mind-prompt-*.txt

# Development artifacts cleanup
*-test-*
comprehensive-*
test-build-*
validation-*
production-scan-*
*COMPREHENSIVE*
*TEST_*
*COVERAGE*
*ANALYSIS*
*REPORT*
*SUMMARY*
*BUILD_*
*MAKEFILE*
*FINAL*
*PRODUCTION*
*IMPROVEMENT*
*IMPLEMENTATION*
*20250*
fix-*
diagnose-*
analyze-*
debug-*
check-*
coverage-*
generate-final-*
make-production-*
safe-build-*
test-*.json
test-*.py
*.disabled
*.backup
