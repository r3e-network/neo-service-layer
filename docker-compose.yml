version: '3.8'

services:
  # API Service
  api:
    build:
      context: .
      dockerfile: deployment/docker/Dockerfile.occlum
      target: api
    ports:
      - "5000:80"
      - "5001:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=db;Database=NeoServiceLayer;User=sa;Password=YourStrong@Passw0rd;
      - MessageQueue__ConnectionString=amqp://guest:guest@rabbitmq:5672
      - Storage__Provider=FileSystem
      - Storage__FileSystem__RootPath=/app/data/storage
      - Tee__EnclaveHost=tee-host
      - Tee__SimulationMode=true
      - Tee__Type=Occlum
      - OCCLUM_SIMULATION=1
      - Neo__RpcUrl=http://neo-node:10332
      - Neo__WalletPath=/app/data/neo-wallet.json
      - Neo__WalletPassword=password
      - Jwt__Key=YourSecretKeyHere
      - Jwt__Issuer=NeoServiceLayer
      - Jwt__Audience=NeoServiceLayerClients
      - Telemetry__Jaeger__AgentHost=jaeger
      - Telemetry__Jaeger__AgentPort=6831
    volumes:
      - neo-service-layer-data:/app/data
    depends_on:
      - db
      - rabbitmq
      - tee-host
      - neo-node
      - jaeger

  # TEE Host Service
  tee-host:
    build:
      context: .
      dockerfile: deployment/docker/Dockerfile.occlum
      target: tee-host
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=db;Database=NeoServiceLayer;User=sa;Password=YourStrong@Passw0rd;
      - MessageQueue__ConnectionString=amqp://guest:guest@rabbitmq:5672
      - Storage__Provider=FileSystem
      - Storage__FileSystem__RootPath=/app/data/storage
      - Tee__SimulationMode=true
      - Tee__Type=Occlum
      - OCCLUM_SIMULATION=1
    depends_on:
      - db
      - rabbitmq

  # Database
  db:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong@Passw0rd
      - TZ=UTC
    ports:
      - "1433:1433"
    volumes:
      - db-data:/var/opt/mssql

  # Message Queue
  rabbitmq:
    image: rabbitmq:3-management
    environment:
      - TZ=UTC
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  # Monitoring
  prometheus:
    image: prom/prometheus
    environment:
      - TZ=UTC
    ports:
      - "9090:9090"
    volumes:
      - ./deployment/docker/prometheus:/etc/prometheus
      - prometheus-data:/prometheus

  grafana:
    image: grafana/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - TZ=UTC
    ports:
      - "3000:3000"
    volumes:
      - ./deployment/docker/grafana/provisioning:/etc/grafana/provisioning
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus

  # Logging
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - TZ=UTC
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.0
    environment:
      - TZ=UTC
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  # Tracing
  jaeger:
    image: jaegertracing/all-in-one:1.35
    environment:
      - TZ=UTC
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
      - "9411:9411"

  # Neo N3 Node
  neo-node:
    image: cityofzion/neo-go:latest
    environment:
      - TZ=UTC
    ports:
      - "10332:10332"
      - "10333:10333"
    volumes:
      - neo-node-data:/root/.neo-go
    command: node --mainnet

  # Redis
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 50
    networks:
      - test-network

  # Example Service
  example:
    build:
      context: .
      dockerfile: Dockerfile.test
    command: dotnet test tests/NeoServiceLayer.Integration.Tests/NeoServiceLayer.Integration.Tests.csproj --filter "FullyQualifiedName~UnitTest1" --logger "console;verbosity=detailed"
    environment:
      - ASPNETCORE_ENVIRONMENT=Test
      - UseInMemoryDatabase=true
      - ConnectionStrings__DefaultConnection=InMemory
      - Redis__ConnectionString=redis:6379
      - OCCLUM_SIMULATION=1
      - Tee__SimulationMode=true
      - Tee__Type=Occlum
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - test-network

volumes:
  db-data:
  rabbitmq-data:
  prometheus-data:
  grafana-data:
  elasticsearch-data:
  neo-node-data:
  neo-service-layer-data:

networks:
  test-network:
    driver: bridge
