version: '3.8'

services:
  # PostgreSQL for development
  postgres:
    image: postgres:16-alpine
    container_name: neo-postgres-dev
    environment:
      POSTGRES_USER: neo_dev
      POSTGRES_PASSWORD: neo_dev_password
      POSTGRES_DB: neoservicedb_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    networks:
      - neo-dev-network

  # Redis for development
  redis:
    image: redis:7-alpine
    container_name: neo-redis-dev
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_dev_data:/data
    networks:
      - neo-dev-network

  # RabbitMQ for development
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: neo-rabbitmq-dev
    environment:
      RABBITMQ_DEFAULT_USER: neo_dev
      RABBITMQ_DEFAULT_PASS: neo_dev_password
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_dev_data:/var/lib/rabbitmq
    networks:
      - neo-dev-network

  # Consul for development
  consul:
    image: consul:1.16
    container_name: neo-consul-dev
    ports:
      - "8500:8500"
      - "8600:8600/tcp"
      - "8600:8600/udp"
    command: "agent -dev -ui -client=0.0.0.0"
    networks:
      - neo-dev-network

  # Prometheus for development monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: neo-prometheus-dev
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_dev_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - neo-dev-network

  # Grafana for development monitoring
  grafana:
    image: grafana/grafana:latest
    container_name: neo-grafana-dev
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_dev_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - neo-dev-network
    depends_on:
      - prometheus

  # Jaeger for distributed tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: neo-jaeger-dev
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
      - "9411:9411"
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    networks:
      - neo-dev-network

  # MinIO for S3-compatible storage (development)
  minio:
    image: minio/minio:latest
    container_name: neo-minio-dev
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_dev_data:/data
    networks:
      - neo-dev-network

volumes:
  postgres_dev_data:
  redis_dev_data:
  rabbitmq_dev_data:
  prometheus_dev_data:
  grafana_dev_data:
  minio_dev_data:

networks:
  neo-dev-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16