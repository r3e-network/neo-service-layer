name: Build and Test with Occlum

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main, develop ]

env:
  DOTNET_VERSION: '9.0.x'
  OCCLUM_VERSION: '0.30.1'

jobs:
  cancel-previous:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.0
        with:
          access_token: ${{ github.token }}

  build-and-test-occlum:
    runs-on: ubuntu-20.04
    container:
      image: occlum/occlum:0.30.1-ubuntu20.04
      options: --device /dev/sgx_enclave --device /dev/sgx_provision -v /var/run/aesmd:/var/run/aesmd
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET in Occlum container
      run: |
        apt-get update
        apt-get install -y wget
        wget https://dot.net/v1/dotnet-install.sh
        chmod +x dotnet-install.sh
        ./dotnet-install.sh --channel 9.0 --install-dir /usr/share/dotnet
        ln -s /usr/share/dotnet/dotnet /usr/bin/dotnet
        dotnet --version

    - name: Cache NuGet packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Run tests outside Occlum (for faster CI)
      run: dotnet test --no-build --configuration Release --verbosity normal

    - name: Create Occlum instance for integration tests
      run: |
        mkdir -p /tmp/occlum_instance
        cd /tmp/occlum_instance
        occlum init
        cp $GITHUB_WORKSPACE/occlum_config.json ./Occlum.json
        
        # Copy .NET runtime
        mkdir -p image/opt/dotnet
        cp -r /usr/share/dotnet/* image/opt/dotnet/
        
        # Copy test assemblies
        mkdir -p image/tests
        find $GITHUB_WORKSPACE -name "*.Tests.dll" -path "*/bin/Release/*" -exec cp {} image/tests/ \;
        
        # Build Occlum image
        occlum build

    - name: Run integration tests in Occlum
      run: |
        cd /tmp/occlum_instance
        # Run selected integration tests that require SGX
        occlum run /opt/dotnet/dotnet test /tests/NeoServiceLayer.Integration.Tests.dll --filter "Category=SGX"
      continue-on-error: true

    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: |
          **/TestResults/*.trx
          **/TestResults/*.xml

  build-docker-image:
    needs: build-and-test-occlum
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build Occlum Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.occlum
        push: false
        tags: neo-service-layer:occlum-${{ github.sha }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache