name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 9.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Test
      run: dotnet test --no-build --verbosity normal

    - name: Setup Occlum and SGX SDK
      run: |
        echo 'deb [arch=amd64] https://download.01.org/intel-sgx/sgx_repo/ubuntu focal main' | sudo tee /etc/apt/sources.list.d/intel-sgx.list
        wget -qO - https://download.01.org/intel-sgx/sgx_repo/ubuntu/intel-sgx-deb.key | sudo apt-key add -
        sudo apt update
        sudo apt -y install build-essential cmake libssl-dev gdb libsgx-enclave-common libsgx-quote-ex libprotobuf17 libsgx-dcap-ql libsgx-dcap-ql-dev az-dcap-client

        # Install Node.js
        curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -
        sudo apt-get install -y nodejs

    - name: Build Enclave
      run: |
        cd src/NeoServiceLayer.Tee.Enclave
        export OCCLUM_SIMULATION=1
        mkdir -p build
        cd build
        cmake ..
        make
        mkdir -p ../../../bin
        cp lib/libenclave.so ../../../bin/

    - name: Run Occlum Tests
      run: |
        export OCCLUM_SIMULATION=1
        dotnet test --filter "Category=Occlum" --configuration Release --verbosity normal

    - name: Build Docker Images
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        docker build -t neoservicelayer/api:latest -f docker/occlum/Dockerfile --target api .
        docker build -t neoservicelayer/tee-host:latest -f docker/occlum/Dockerfile --target tee-host .

    - name: Login to Docker Hub
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Push Docker Images
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        docker push neoservicelayer/api:latest
        docker push neoservicelayer/tee-host:latest

    - name: Run Integration Tests
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        docker-compose -f docker-compose.test.yml up -d
        sleep 30  # Wait for services to start
        dotnet test tests/NeoServiceLayer.IntegrationTests/NeoServiceLayer.IntegrationTests.csproj --filter Category=Integration
        docker-compose -f docker-compose.test.yml down

    - name: Deploy to Kubernetes
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: Azure/k8s-deploy@v1
      with:
        manifests: |
          deployment/kubernetes/namespace.yaml
          deployment/kubernetes/configmap.yaml
          deployment/kubernetes/secret.yaml
          deployment/kubernetes/deployment.yaml
          deployment/kubernetes/service.yaml
          deployment/kubernetes/ingress.yaml
        images: |
          neoservicelayer/api:latest
          neoservicelayer/tee-host:latest
        namespace: neo-service-layer
        kubeconfig: ${{ secrets.KUBE_CONFIG }}
