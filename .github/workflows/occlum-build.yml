name: Occlum Enclave Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 9.0.x

    - name: Install Occlum dependencies
      run: |
        echo 'deb [arch=amd64] https://download.01.org/intel-sgx/sgx_repo/ubuntu focal main' | sudo tee /etc/apt/sources.list.d/intel-sgx.list
        wget -qO - https://download.01.org/intel-sgx/sgx_repo/ubuntu/intel-sgx-deb.key | sudo apt-key add -
        sudo apt update
        sudo apt -y install build-essential cmake libssl-dev gdb libsgx-enclave-common libsgx-quote-ex libprotobuf17 libsgx-dcap-ql libsgx-dcap-ql-dev az-dcap-client

        # Install Node.js
        curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -
        sudo apt-get install -y nodejs

    - name: Build Occlum enclave
      run: |
        cd src/NeoServiceLayer.Tee.Enclave
        export OCCLUM_SIMULATION=1
        mkdir -p build
        cd build
        cmake ..
        make
        mkdir -p ../../../bin
        cp lib/libenclave.so ../../../bin/

    - name: Build .NET solution
      run: dotnet build --configuration Release

    - name: Test
      run: |
        export OCCLUM_SIMULATION=1
        dotnet test --filter "Category=Occlum" --configuration Release --no-build --verbosity normal

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: occlum-build
        path: |
          bin/
          src/NeoServiceLayer.Tee.Enclave/build/lib/libenclave.so
