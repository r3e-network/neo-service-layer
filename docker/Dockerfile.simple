# Neo Service Layer - Simplified Dockerfile (without Rust/SGX components)
# Multi-stage build for optimized production deployment

# Build stage
FROM mcr.microsoft.com/dotnet/sdk:9.0 AS build
WORKDIR /src

# Install build dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    wget \
    curl \
    gnupg \
    software-properties-common \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Copy solution and project files
COPY *.sln .
COPY global.json .
COPY Directory.Build.props .
COPY Directory.Build.targets .
COPY Directory.Packages.props .

# Copy all project files for dependency resolution
COPY src/Api/NeoServiceLayer.Api/*.csproj src/Api/NeoServiceLayer.Api/
COPY src/Core/NeoServiceLayer.Core/*.csproj src/Core/NeoServiceLayer.Core/
COPY src/Core/NeoServiceLayer.ServiceFramework/*.csproj src/Core/NeoServiceLayer.ServiceFramework/
COPY src/Core/NeoServiceLayer.Shared/*.csproj src/Core/NeoServiceLayer.Shared/
COPY src/Blockchain/NeoServiceLayer.Neo.N3/*.csproj src/Blockchain/NeoServiceLayer.Neo.N3/
COPY src/Blockchain/NeoServiceLayer.Neo.X/*.csproj src/Blockchain/NeoServiceLayer.Neo.X/
COPY src/Services/NeoServiceLayer.Services.*/*.csproj src/Services/NeoServiceLayer.Services.*/
COPY src/AI/NeoServiceLayer.AI.*/*.csproj src/AI/NeoServiceLayer.AI.*/
COPY src/Advanced/NeoServiceLayer.Advanced.*/*.csproj src/Advanced/NeoServiceLayer.Advanced.*/
COPY src/Infrastructure/NeoServiceLayer.Infrastructure.*/*.csproj src/Infrastructure/NeoServiceLayer.Infrastructure.*/

# Restore dependencies
RUN dotnet restore src/Api/NeoServiceLayer.Api/NeoServiceLayer.Api.csproj

# Copy source code (excluding TEE/Rust components)
COPY src/ src/

# Build the .NET application
WORKDIR /src/src/Api/NeoServiceLayer.Api
RUN dotnet build -c Release --no-restore

# Publish the application
RUN dotnet publish -c Release --no-build --no-restore -o /app/publish

# Runtime stage
FROM mcr.microsoft.com/dotnet/aspnet:9.0 AS runtime

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user for security
RUN groupadd -r neoservice && useradd -r -g neoservice neoservice

# Set working directory
WORKDIR /app

# Copy published application
COPY --from=build /app/publish .

# Create directories for logs and data
RUN mkdir -p /var/log/neo-service-layer /app/data && \
    chown -R neoservice:neoservice /var/log/neo-service-layer /app/data /app

# Switch to non-root user
USER neoservice

# Expose ports
EXPOSE 5000 5001 9090

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:5000/health || exit 1

# Environment variables
ENV ASPNETCORE_ENVIRONMENT=Production
ENV ASPNETCORE_URLS=http://+:5000;https://+:5001
ENV DOTNET_RUNNING_IN_CONTAINER=true
ENV DOTNET_USE_POLLING_FILE_WATCHER=true
ENV DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=false

# Runtime configuration
ENV DOTNET_EnableDiagnostics=0
ENV DOTNET_gcServer=1
ENV DOTNET_ThreadPool_UnfairSemaphoreSpinLimit=6

# Entry point
ENTRYPOINT ["dotnet", "NeoServiceLayer.Api.dll"]