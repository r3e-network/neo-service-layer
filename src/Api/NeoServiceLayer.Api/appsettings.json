{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning",
      "Microsoft.AspNetCore.Authentication": "Information",
      "NeoServiceLayer": "Information"
    }
  },
  "AllowedHosts": "*",
  "JwtSettings": {
    "SecretKey": "", // Set via environment variable JWT_SECRET_KEY
    "Issuer": "NeoServiceLayer",
    "Audience": "NeoServiceLayerUsers",
    "ExpirationHours": 24
  },
  "Cors": {
    "AllowedOrigins": [
      // These are development-only values. In production, set CORS_ORIGIN_1, CORS_ORIGIN_2, etc. environment variables
      "${SERVICE_HTTP_3000:-http://${SERVICE_HOST_3000:-localhost:3000}}",
      "${SERVICE_HTTPS_3001:-https://${SERVICE_HOST_3001:-localhost:3001}}",
      "${SERVICE_HTTP_8080:-http://${SERVICE_HOST_8080:-localhost:8080}}"
    ]
  },
  "RateLimit": {
    "ApiRateLimit": {
      "PermitLimit": 100,
      "WindowMinutes": 1
    },
    "KeyManagementRateLimit": {
      "PermitLimit": 20,
      "WindowMinutes": 1
    }
  },
  "Blockchain": {
    "NeoN3": {
      // These are development-only values. In production, set NEO_N3_RPC_URL and NEO_N3_WEBSOCKET_URL environment variables
      "RpcUrl": "${SERVICE_HTTP_20332:-http://${SERVICE_HOST_20332:-localhost:20332}}",
      "WebSocketUrl": "${SERVICE_WS_20334:-ws://${SERVICE_HOST_20334:-localhost:20334}}",
      "NetworkMagic": 860833102,
      "TimeoutSeconds": 30,
      "EnableDebugLogging": false
    },
    "NeoX": {
      // These are development-only values. In production, set NEO_X_RPC_URL and NEO_X_WEBSOCKET_URL environment variables
      "RpcUrl": "${SERVICE_HTTP_8545:-http://${SERVICE_HOST_8545:-localhost:8545}}",
      "WebSocketUrl": "${SERVICE_WS_8546:-ws://${SERVICE_HOST_8546:-localhost:8546}}",
      "ChainId": 12227332,
      "TimeoutSeconds": 30,
      "EnableDebugLogging": false,
      "GasPriceStrategy": "standard"
    }
  },
  "KeyManagement": {
    "MaxKeyCount": 1000,
    "SupportedKeyTypes": ["Secp256k1", "Ed25519", "RSA"],
    "KeyRotationIntervalDays": 90
  },
  "Oracle": {
    "MaxDataSources": 100,
    "DataRefreshIntervalSeconds": 60,
    "RequestTimeoutSeconds": 30
  },
  "Storage": {
    "MaxStorageSizeBytes": 1000000000,
    "EncryptionAlgorithm": "AES-256-GCM",
    "EnableCompression": true
  },
  "Voting": {
    "MaxActiveProposals": 50,
    "DefaultVotingPeriodHours": 168,
    "MinimumQuorumPercentage": 0.1
  },
  "Compliance": {
    "EnabledRules": [],
    "AuditLogRetentionDays": 365,
    "EnableRealTimeMonitoring": true
  },
  "CrossChain": {
    "SupportedChains": ["NeoN3", "NeoX"],
    "BridgeContracts": {},
    "ConfirmationBlocks": 6
  },
  "Automation": {
    "MaxActiveWorkflows": 100,
    "ExecutionIntervalSeconds": 60,
    "EnableParallelExecution": true
  },
  "Health": {
    "HealthCheckIntervalSeconds": 30,
    "UnhealthyThreshold": 3,
    "EnableDetailedReports": true
  },
  "Monitoring": {
    "MetricsIntervalSeconds": 15,
    "MetricsRetentionDays": 30,
    "EnablePerformanceMonitoring": true
  },
  "Notification": {
    "EnabledChannels": ["Email", "Webhook"],
    "RetryAttempts": 3,
    "BatchSize": 100
  },
  "EventSubscription": {
    "MaxSubscriptions": 1000,
    "EventBufferSize": 10000,
    "SubscriptionTimeoutSeconds": 300
  },
  "Randomness": {
    "EntropySources": ["Hardware", "Blockchain", "External"],
    "MinimumEntropyBits": 256,
    "EnableBiasTesting": true
  },
  "Compute": {
    "MaxConcurrentComputations": 10,
    "ComputationTimeoutSeconds": 300,
    "MemoryLimitMB": 1024
  },
  "ProofOfReserve": {
    "ProofIntervalHours": 24,
    "SupportedAssets": ["NEO", "GAS", "ETH", "BTC"],
    "EnableAutomaticProofs": true
  },
  "AI": {
    "ModelCacheSize": 10,
    "InferenceTimeoutSeconds": 60,
    "EnableGpuAcceleration": false
  },
  "ZeroKnowledge": {
    "SupportedProofSystems": ["SNARK", "STARK", "Bulletproof"],
    "CircuitCacheSize": 50,
    "ProofTimeoutSeconds": 300
  },
  "FairOrdering": {
    "OrderingAlgorithm": "TimeWeightedFair",
    "BatchSize": 100,
    "OrderingIntervalMs": 1000
  },
  "Tee": {
    "EnclaveType": "SGX",
    "AttestationServiceUrl": null,
    "EnableRemoteAttestation": true
  },
  "SocialRecovery": {
    "ContractHash": {
      "neo-n3": "0x0000000000000000000000000000000000000000",
      "neo-x": "0x0000000000000000000000000000000000000000"
    },
    "DefaultCacheDuration": "00:05:00",
    "MaxRecoveryAttempts": 3,
    "RecoveryAttemptWindow": "1.00:00:00"
  },
  "Configuration": {
    "EncryptionKey": "", // Set via environment variable CONFIG_ENCRYPTION_KEY
    "MaxConfigSize": 1048576,
    "VersionRetentionCount": 10,
    "BackupIntervalHours": 24
  },
  "AbstractAccount": {
    "MaxGuardians": 10,
    "DefaultExecutionGasLimit": 1000000,
    "GuardianThreshold": 2,
    "OperationTimeoutSeconds": 300
  },
  "SmartContracts": {
    "MaxContractSize": 16777216,
    "DeploymentGasLimit": 10000000,
    "InvocationTimeoutSeconds": 60,
    "EnableContractUpgrades": true
  },
  "AttestationService": {
    "EpidUrl": "https://api.trustedservices.intel.com/sgx/dev/attestation/v4/",
    "IasApiKey": "", // Set via environment variable IAS_API_KEY
    "TrustLevel": "Full",
    "CacheValidationResults": true,
    "ValidationCacheDurationMinutes": 30
  },
  "NetworkSecurity": {
    "FirewallEnabled": true,
    "MaxFirewallRules": 1000,
    "ThreatDetectionEnabled": true,
    "SecurityAuditIntervalHours": 24,
    "AllowedIpRanges": [],
    "BlockedIpRanges": []
  },
  "EnclaveStorage": {
    "MaxDataSize": 134217728,
    "StorageQuotaBytes": 1073741824,
    "EncryptionMethod": "AES-256-GCM",
    "IntegrityCheckIntervalHours": 12,
    "BackupEnabled": true,
    "BackupRetentionDays": 30
  },
  "Backup": {
    "StorageProvider": "Local",
    "StoragePath": "./backups",
    "RetentionDays": 30,
    "CompressionEnabled": true,
    "EncryptionEnabled": true,
    "MaxBackupSize": 10737418240
  },
  "SecretsManagement": {
    "KeyRotationIntervalDays": 30,
    "MaxSecretLength": 4096,
    "SecretVersionRetentionCount": 5,
    "AuditLogEnabled": true
  },
  "ConnectionStrings": {
    // These are development-only values. In production, set DATABASE_CONNECTION_STRING and REDIS_CONNECTION_STRING environment variables
    "DefaultConnection": "Host=localhost;Port=5432;Database=neo_service_layer;Username=neo_user;Password=neo_password;Include Error Detail=true;",
    "PostgreSQL": "Host=localhost;Port=5432;Database=neo_service_layer;Username=neo_user;Password=neo_password;Include Error Detail=true;",
    "Redis": "${SERVICE_HOST_6379:-localhost:6379}"
  },
  "Database": {
    "Provider": "PostgreSQL",
    "ConnectionString": "Host=localhost;Port=5432;Database=neo_service_layer;Username=neo_user;Password=neo_password;Include Error Detail=true;",
    "CommandTimeout": 30,
    "EnableRetryOnFailure": true,
    "MaxRetryCount": 3,
    "MaxRetryDelay": "00:00:30"
  },
  "OpenTelemetry": {
    "ServiceName": "NeoServiceLayer",
    "ServiceVersion": "1.0.0",
    "Exporters": {
      "Console": {
        "Enabled": true
      },
      "Jaeger": {
        "Enabled": false,
        // This is a development-only value. In production, set JAEGER_ENDPOINT environment variable
        "Endpoint": "${SERVICE_HTTP_14268:-http://${SERVICE_HOST_14268:-localhost:14268}}/api/traces"
      },
      "Prometheus": {
        "Enabled": false,
        "Endpoint": "/metrics"
      }
    }
  },
  "Security": {
    "RequireHttps": true,
    "EnableApiKeyAuthentication": false,
    "ApiKeyHeader": "X-API-Key",
    "MaxRequestBodySize": 33554432,
    "RequestTimeoutSeconds": 30
  },
  "HealthChecks": {
    "UI": {
      "Enabled": true,
      "Path": "/health"
    },
    "Database": {
      "Enabled": true,
      "Timeout": "00:00:30"
    },
    "Redis": {
      "Enabled": true,
      "Timeout": "00:00:10"
    },
    "Blockchain": {
      "Enabled": true,
      "Timeout": "00:01:00"
    }
  }
}
