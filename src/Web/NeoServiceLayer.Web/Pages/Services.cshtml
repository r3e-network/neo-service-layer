@page
@model NeoServiceLayer.Web.Pages.ServicesModel
@{
    ViewData["Title"] = "Services Overview";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - Neo Service Layer</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            --foundation: #4f46e5;
            --security: #059669;
            --intelligence: #dc2626;
            --blockchain: #7c3aed;
            --automation: #ea580c;
            --advanced: #be123c;
            --infrastructure: #0891b2;
        }

        * { box-sizing: border-box; }

        body {
            font-family: 'Inter', sans-serif;
            background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
            margin: 0;
            line-height: 1.6;
        }

        .hero {
            background: var(--primary);
            padding: 4rem 0;
            color: white;
            position: relative;
            overflow: hidden;
        }

        .hero::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grid" width="10" height="10" patternUnits="userSpaceOnUse"><path d="M 10 0 L 0 0 0 10" fill="none" stroke="rgba(255,255,255,0.1)" stroke-width="0.5"/></pattern></defs><rect width="100" height="100" fill="url(%23grid)"/></svg>');
        }

        .hero-content {
            position: relative;
            z-index: 2;
            text-align: center;
        }

        .ecosystem {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
            gap: 2rem;
            max-width: 1400px;
            margin: 3rem auto;
            padding: 0 2rem;
        }

        .layer {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 24px;
            padding: 2rem;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.08);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            position: relative;
            overflow: hidden;
        }

        .layer::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: var(--layer-color);
            transition: height 0.3s ease;
        }

        .layer:hover {
            transform: translateY(-8px);
            box-shadow: 0 30px 80px rgba(0, 0, 0, 0.12);
        }

        .layer:hover::before { height: 8px; }

        .layer.foundation { --layer-color: var(--foundation); }
        .layer.security { --layer-color: var(--security); }
        .layer.intelligence { --layer-color: var(--intelligence); }
        .layer.blockchain { --layer-color: var(--blockchain); }
        .layer.automation { --layer-color: var(--automation); }
        .layer.advanced { --layer-color: var(--advanced); }
        .layer.infrastructure { --layer-color: var(--infrastructure); }

        .layer-header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: 1.5rem;
            padding-bottom: 1rem;
            border-bottom: 1px solid rgba(0, 0, 0, 0.1);
        }

        .layer-title {
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }

        .layer-icon {
            width: 48px;
            height: 48px;
            border-radius: 12px;
            background: linear-gradient(135deg, var(--layer-color), color-mix(in srgb, var(--layer-color) 80%, white));
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.25rem;
            box-shadow: 0 4px 12px color-mix(in srgb, var(--layer-color) 30%, transparent);
        }

        .layer-title h3 {
            font-size: 1.25rem;
            font-weight: 600;
            color: var(--layer-color);
            margin: 0;
        }

        .count-badge {
            background: linear-gradient(135deg, var(--layer-color), color-mix(in srgb, var(--layer-color) 80%, white));
            color: white;
            border-radius: 20px;
            padding: 0.25rem 0.75rem;
            font-size: 0.875rem;
            font-weight: 600;
        }

        .services {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 1rem;
        }

        .service {
            background: linear-gradient(135deg, rgba(255, 255, 255, 0.9) 0%, rgba(255, 255, 255, 0.6) 100%);
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 16px;
            padding: 1.5rem;
            cursor: pointer;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            position: relative;
            overflow: hidden;
            backdrop-filter: blur(10px);
        }

        .service::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(135deg, var(--layer-color) 0%, color-mix(in srgb, var(--layer-color) 70%, transparent) 100%);
            opacity: 0;
            transition: opacity 0.3s ease;
            pointer-events: none;
        }

        .service:hover {
            transform: translateY(-4px) scale(1.02);
            box-shadow: 0 20px 40px color-mix(in srgb, var(--layer-color) 15%, transparent);
            border-color: var(--layer-color);
        }

        .service:hover::before { opacity: 0.05; }

        .service-icon {
            width: 56px;
            height: 56px;
            border-radius: 16px;
            background: linear-gradient(135deg, var(--layer-color), color-mix(in srgb, var(--layer-color) 80%, white));
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.5rem;
            margin-bottom: 1rem;
            box-shadow: 0 8px 20px color-mix(in srgb, var(--layer-color) 25%, transparent);
            transition: all 0.3s ease;
        }

        .service:hover .service-icon {
            transform: scale(1.1) rotate(5deg);
            box-shadow: 0 12px 30px color-mix(in srgb, var(--layer-color) 35%, transparent);
        }

        .service h4 {
            font-size: 1rem;
            font-weight: 600;
            color: #1e293b;
            margin-bottom: 0.5rem;
        }

        .service p {
            font-size: 0.875rem;
            color: #64748b;
            margin-bottom: 1rem;
        }

        .service-status {
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        .status {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
            font-size: 0.75rem;
            font-weight: 500;
            text-transform: uppercase;
        }

        .status.online {
            background: linear-gradient(135deg, #10b981, #059669);
            color: white;
        }

        .status.checking {
            background: linear-gradient(135deg, #f59e0b, #d97706);
            color: white;
        }

        .status.offline {
            background: linear-gradient(135deg, #ef4444, #dc2626);
            color: white;
        }

        .stats {
            background: rgba(255, 255, 255, 0.15);
            border-radius: 20px;
            padding: 2rem;
            margin-top: 3rem;
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 2rem;
        }

        .stat {
            text-align: center;
        }

        .stat-value {
            font-size: 2.5rem;
            font-weight: 700;
            color: white;
            margin-bottom: 0.5rem;
        }

        .stat-label {
            font-size: 0.875rem;
            color: rgba(255, 255, 255, 0.8);
            font-weight: 500;
            text-transform: uppercase;
        }

        .indicator {
            width: 8px;
            height: 8px;
            border-radius: 50%;
            animation: pulse 2s infinite;
        }

        .indicator.online { background: #10b981; }
        .indicator.checking { background: #f59e0b; }
        .indicator.offline { background: #ef4444; }

        @@keyframes pulse {
            0%, 100% { opacity: 1; }
            50% { opacity: 0.6; }
        }

        @@keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .layer {
            animation: fadeInUp 0.6s ease-out;
        }

        .layer:nth-child(1) { animation-delay: 0.1s; }
        .layer:nth-child(2) { animation-delay: 0.2s; }
        .layer:nth-child(3) { animation-delay: 0.3s; }
        .layer:nth-child(4) { animation-delay: 0.4s; }
        .layer:nth-child(5) { animation-delay: 0.5s; }
        .layer:nth-child(6) { animation-delay: 0.6s; }
        .layer:nth-child(7) { animation-delay: 0.7s; }

        .btn-hero {
            background: rgba(255, 255, 255, 0.2);
            border: 2px solid rgba(255, 255, 255, 0.3);
            color: white;
            padding: 0.75rem 2rem;
            border-radius: 25px;
            text-decoration: none;
            font-weight: 600;
            transition: all 0.3s ease;
            backdrop-filter: blur(10px);
        }

        .btn-hero:hover {
            background: rgba(255, 255, 255, 0.3);
            border-color: rgba(255, 255, 255, 0.5);
            color: white;
            transform: translateY(-2px);
        }

        @@media (max-width: 768px) {
            .ecosystem {
                grid-template-columns: 1fr;
                padding: 0 1rem;
            }
            
            .layer {
                padding: 1.5rem;
            }
            
            .services {
                grid-template-columns: 1fr;
            }

            .hero {
                padding: 3rem 0 2rem 0;
            }
        }
    </style>
</head>
<body>
    <!-- Hero Section -->
    <div class="hero">
        <div class="hero-content">
            <div class="container">
                <h1 class="display-3 fw-bold mb-3">
                    <i class="fas fa-layer-group me-3"></i>
                    Neo Service Ecosystem
                </h1>
                <p class="lead mb-4" style="font-size: 1.25rem; max-width: 800px; margin: 0 auto;">
                    A comprehensive microservices architecture powering the next generation of blockchain applications with enterprise-grade security and scalability
                </p>
                
                <div class="d-flex justify-content-center gap-3 mb-4">
                    <a href="/dashboard" class="btn-hero">
                        <i class="fas fa-tachometer-alt me-2"></i>Dashboard
                    </a>
                    <a href="/swagger" class="btn-hero" target="_blank">
                        <i class="fas fa-book me-2"></i>API Docs
                    </a>
                </div>

                <!-- Hero Stats -->
                <div class="stats">
                    <div class="stat">
                        <div class="stat-value">22</div>
                        <div class="stat-label">Total Services</div>
                    </div>
                    <div class="stat">
                        <div class="stat-value" id="online-count">--</div>
                        <div class="stat-label">Online Services</div>
                    </div>
                    <div class="stat">
                        <div class="stat-value">7</div>
                        <div class="stat-label">Service Layers</div>
                    </div>
                    <div class="stat">
                        <div class="stat-value">100%</div>
                        <div class="stat-label">SGX Secured</div>
                    </div>
                    <div class="stat">
                        <div class="stat-value" id="network-health">--</div>
                        <div class="stat-label">Network Health</div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Service Ecosystem -->
    <div class="ecosystem">
        <!-- Foundation Layer -->
        <div class="layer foundation">
            <div class="layer-header">
                <div class="layer-title">
                    <div class="layer-icon">
                        <i class="fas fa-building"></i>
                    </div>
                    <div>
                        <h3>Foundation Layer</h3>
                        <p class="mb-0 text-muted small">Core infrastructure for security, storage, and key management</p>
                    </div>
                </div>
                <div class="count-badge">3 Services</div>
            </div>
            
            <div class="services">
                <div class="service" onclick="window.location.href='/servicepages/keymanagement'">
                    <div class="service-icon">
                        <i class="fas fa-key"></i>
                    </div>
                    <h4>Key Management</h4>
                    <p>Secure cryptographic key generation, storage, and management with SGX enclave protection</p>
                    <div class="service-status">
                        <div class="status checking" id="keymanagement-status">
                            <div class="indicator checking"></div>
                            Checking
                        </div>
                    </div>
                </div>
                
                <div class="service" onclick="window.location.href='/servicepages/sgx'">
                    <div class="service-icon">
                        <i class="fas fa-shield-alt"></i>
                    </div>
                    <h4>SGX Enclave</h4>
                    <p>Trusted execution environment with Intel SGX hardware attestation and secure computation</p>
                    <div class="service-status">
                        <div class="status checking" id="sgx-status">
                            <div class="indicator checking"></div>
                            Checking
                        </div>
                    </div>
                </div>
                
                <div class="service" onclick="window.location.href='/servicepages/storage'">
                    <div class="service-icon">
                        <i class="fas fa-database"></i>
                    </div>
                    <h4>Storage</h4>
                    <p>Encrypted, compressed data storage with transaction support and metadata management</p>
                    <div class="service-status">
                        <div class="status checking" id="storage-status">
                            <div class="indicator checking"></div>
                            Checking
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Security Layer -->
        <div class="layer security">
            <div class="layer-header">
                <div class="layer-title">
                    <div class="layer-icon">
                        <i class="fas fa-lock"></i>
                    </div>
                    <div>
                        <h3>Security Layer</h3>
                        <p class="mb-0 text-muted small">Advanced security for compliance, privacy, and data protection</p>
                    </div>
                </div>
                <div class="count-badge">3 Services</div>
            </div>
            
            <div class="services">
                <div class="service" onclick="window.location.href='/servicepages/compliance'">
                    <div class="service-icon">
                        <i class="fas fa-check-circle"></i>
                    </div>
                    <h4>Compliance</h4>
                    <p>Regulatory compliance monitoring with audit trails and automated violation detection</p>
                    <div class="service-status">
                        <div class="status checking" id="compliance-status">
                            <div class="indicator checking"></div>
                            Checking
                        </div>
                    </div>
                </div>
                
                <div class="service" onclick="window.location.href='/servicepages/zeroknowledge'">
                    <div class="service-icon">
                        <i class="fas fa-user-secret"></i>
                    </div>
                    <h4>Zero Knowledge</h4>
                    <p>Privacy-preserving cryptographic proofs and verifications with zk-SNARK support</p>
                    <div class="service-status">
                        <div class="status checking" id="zeroknowledge-status">
                            <div class="indicator checking"></div>
                            Checking
                        </div>
                    </div>
                </div>
                
                <div class="service" onclick="window.location.href='/servicepages/backup'">
                    <div class="service-icon">
                        <i class="fas fa-save"></i>
                    </div>
                    <h4>Backup</h4>
                    <p>Automated backup and restore with encryption, compression, and integrity verification</p>
                    <div class="service-status">
                        <div class="status checking" id="backup-status">
                            <div class="indicator checking"></div>
                            Checking
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Intelligence Layer -->
        <div class="layer intelligence">
            <div class="layer-header">
                <div class="layer-title">
                    <div class="layer-icon">
                        <i class="fas fa-brain"></i>
                    </div>
                    <div>
                        <h3>Intelligence Layer</h3>
                        <p class="mb-0 text-muted small">AI-powered analytics, pattern recognition, and data processing</p>
                    </div>
                </div>
                <div class="count-badge">3 Services</div>
            </div>
            
            <div class="services">
                <div class="service" onclick="window.location.href='/servicepages/prediction'">
                    <div class="service-icon">
                        <i class="fas fa-chart-line"></i>
                    </div>
                    <h4>AI Prediction</h4>
                    <p>Machine learning predictions, risk assessment, and price forecasting with secure execution</p>
                    <div class="service-status">
                        <div class="status checking" id="prediction-status">
                            <div class="indicator checking"></div>
                            Checking
                        </div>
                    </div>
                </div>
                
                <div class="service" onclick="window.location.href='/servicepages/patternrecognition'">
                    <div class="service-icon">
                        <i class="fas fa-search"></i>
                    </div>
                    <h4>Pattern Recognition</h4>
                    <p>Advanced pattern analysis, anomaly detection, and fraud detection with AI insights</p>
                    <div class="service-status">
                        <div class="status checking" id="patternrecognition-status">
                            <div class="indicator checking"></div>
                            Checking
                        </div>
                    </div>
                </div>
                
                <div class="service" onclick="window.location.href='/servicepages/oracle'">
                    <div class="service-icon">
                        <i class="fas fa-eye"></i>
                    </div>
                    <h4>Oracle</h4>
                    <p>External data feeds, price oracles, and secure data aggregation from multiple sources</p>
                    <div class="service-status">
                        <div class="status checking" id="oracle-status">
                            <div class="indicator checking"></div>
                            Checking
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Blockchain Layer -->
        <div class="layer blockchain">
            <div class="layer-header">
                <div class="layer-title">
                    <div class="layer-icon">
                        <i class="fas fa-link"></i>
                    </div>
                    <div>
                        <h3>Blockchain Layer</h3>
                        <p class="mb-0 text-muted small">Blockchain-specific services for accounts, voting, and asset management</p>
                    </div>
                </div>
                <div class="count-badge">4 Services</div>
            </div>
            
            <div class="services">
                <div class="service" onclick="window.location.href='/servicepages/abstractaccount'">
                    <div class="service-icon">
                        <i class="fas fa-user-cog"></i>
                    </div>
                    <h4>Abstract Account</h4>
                    <p>Smart contract wallet management with session keys and multi-signature support</p>
                    <div class="service-status">
                        <div class="status checking" id="abstractaccount-status">
                            <div class="indicator checking"></div>
                            Checking
                        </div>
                    </div>
                </div>
                
                <div class="service" onclick="window.location.href='/servicepages/voting'">
                    <div class="service-icon">
                        <i class="fas fa-vote-yea"></i>
                    </div>
                    <h4>Voting</h4>
                    <p>Decentralized voting with strategy automation and consensus node management</p>
                    <div class="service-status">
                        <div class="status checking" id="voting-status">
                            <div class="indicator checking"></div>
                            Checking
                        </div>
                    </div>
                </div>
                
                <div class="service" onclick="window.location.href='/servicepages/crosschain'">
                    <div class="service-icon">
                        <i class="fas fa-exchange-alt"></i>
                    </div>
                    <h4>Cross Chain</h4>
                    <p>Inter-blockchain communication and asset bridging with secure validation</p>
                    <div class="service-status">
                        <div class="status checking" id="crosschain-status">
                            <div class="indicator checking"></div>
                            Checking
                        </div>
                    </div>
                </div>
                
                <div class="service" onclick="window.location.href='/servicepages/proofofreserve'">
                    <div class="service-icon">
                        <i class="fas fa-certificate"></i>
                    </div>
                    <h4>Proof of Reserve</h4>
                    <p>Cryptographic proof of asset reserves with periodic attestation and auditing</p>
                    <div class="service-status">
                        <div class="status checking" id="proofofreserve-status">
                            <div class="indicator checking"></div>
                            Checking
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Automation Layer -->
        <div class="layer automation">
            <div class="layer-header">
                <div class="layer-title">
                    <div class="layer-icon">
                        <i class="fas fa-robot"></i>
                    </div>
                    <div>
                        <h3>Automation Layer</h3>
                        <p class="mb-0 text-muted small">Automation services for computation, workflows, and notifications</p>
                    </div>
                </div>
                <div class="count-badge">4 Services</div>
            </div>
            
            <div class="services">
                <div class="service" onclick="window.location.href='/servicepages/compute'">
                    <div class="service-icon">
                        <i class="fas fa-microchip"></i>
                    </div>
                    <h4>Compute</h4>
                    <p>Distributed computation with resource allocation and secure job execution</p>
                    <div class="service-status">
                        <div class="status checking" id="compute-status">
                            <div class="indicator checking"></div>
                            Checking
                        </div>
                    </div>
                </div>
                
                <div class="service" onclick="window.location.href='/servicepages/automation'">
                    <div class="service-icon">
                        <i class="fas fa-cogs"></i>
                    </div>
                    <h4>Automation</h4>
                    <p>Workflow automation and task scheduling with trigger-based execution</p>
                    <div class="service-status">
                        <div class="status checking" id="automation-status">
                            <div class="indicator checking"></div>
                            Checking
                        </div>
                    </div>
                </div>
                
                <div class="service" onclick="window.location.href='/servicepages/notification'">
                    <div class="service-icon">
                        <i class="fas fa-bell"></i>
                    </div>
                    <h4>Notification</h4>
                    <p>Multi-channel notification system with template support and delivery tracking</p>
                    <div class="service-status">
                        <div class="status checking" id="notification-status">
                            <div class="indicator checking"></div>
                            Checking
                        </div>
                    </div>
                </div>
                
                <div class="service" onclick="window.location.href='/servicepages/randomness'">
                    <div class="service-icon">
                        <i class="fas fa-random"></i>
                    </div>
                    <h4>Randomness</h4>
                    <p>Cryptographically secure random number generation with bias resistance</p>
                    <div class="service-status">
                        <div class="status checking" id="randomness-status">
                            <div class="indicator checking"></div>
                            Checking
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Advanced Layer -->
        <div class="layer advanced">
            <div class="layer-header">
                <div class="layer-title">
                    <div class="layer-icon">
                        <i class="fas fa-rocket"></i>
                    </div>
                    <div>
                        <h3>Advanced Layer</h3>
                        <p class="mb-0 text-muted small">Advanced blockchain services for specialized consensus mechanisms</p>
                    </div>
                </div>
                <div class="count-badge">1 Service</div>
            </div>
            
            <div class="services">
                <div class="service" onclick="window.location.href='/servicepages/fairordering'">
                    <div class="service-icon">
                        <i class="fas fa-sort-amount-up"></i>
                    </div>
                    <h4>Fair Ordering</h4>
                    <p>Advanced transaction ordering and fair sequencing for blockchain consensus with bias prevention</p>
                    <div class="service-status">
                        <div class="status checking" id="fairordering-status">
                            <div class="indicator checking"></div>
                            Checking
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Infrastructure Layer -->
        <div class="layer infrastructure">
            <div class="layer-header">
                <div class="layer-title">
                    <div class="layer-icon">
                        <i class="fas fa-network-wired"></i>
                    </div>
                    <div>
                        <h3>Infrastructure Layer</h3>
                        <p class="mb-0 text-muted small">Infrastructure services for monitoring, health, configuration, and events</p>
                    </div>
                </div>
                <div class="count-badge">4 Services</div>
            </div>
            
            <div class="services">
                <div class="service" onclick="window.location.href='/servicepages/health'">
                    <div class="service-icon">
                        <i class="fas fa-heartbeat"></i>
                    </div>
                    <h4>Health</h4>
                    <p>System health monitoring and diagnostic reporting with alerting capabilities</p>
                    <div class="service-status">
                        <div class="status checking" id="health-status">
                            <div class="indicator checking"></div>
                            Checking
                        </div>
                    </div>
                </div>
                
                <div class="service" onclick="window.location.href='/servicepages/monitoring'">
                    <div class="service-icon">
                        <i class="fas fa-chart-bar"></i>
                    </div>
                    <h4>Monitoring</h4>
                    <p>Performance metrics collection and analysis with real-time dashboards</p>
                    <div class="service-status">
                        <div class="status checking" id="monitoring-status">
                            <div class="indicator checking"></div>
                            Checking
                        </div>
                    </div>
                </div>
                
                <div class="service" onclick="window.location.href='/servicepages/configuration'">
                    <div class="service-icon">
                        <i class="fas fa-sliders-h"></i>
                    </div>
                    <h4>Configuration</h4>
                    <p>Dynamic configuration management with validation and encrypted storage</p>
                    <div class="service-status">
                        <div class="status checking" id="configuration-status">
                            <div class="indicator checking"></div>
                            Checking
                        </div>
                    </div>
                </div>
                
                <div class="service" onclick="window.location.href='/servicepages/eventsubscription'">
                    <div class="service-icon">
                        <i class="fas fa-calendar-alt"></i>
                    </div>
                    <h4>Event Subscription</h4>
                    <p>Event subscription and real-time notification system with filtering support</p>
                    <div class="service-status">
                        <div class="status checking" id="eventsubscription-status">
                            <div class="indicator checking"></div>
                            Checking
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            checkAllServices();
            checkNetworkHealth();
            
            // Update every 30 seconds
            setInterval(() => {
                checkAllServices();
                checkNetworkHealth();
            }, 30000);
        });

        async function checkNetworkHealth() {
            let healthy = 0;
            const total = 2;

            try {
                const neoN3 = await fetch('https://mainnet1.neo.coz.io:443', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ jsonrpc: '2.0', method: 'getblockcount', id: 1 })
                });
                if (neoN3.ok) healthy++;
            } catch (e) {}

            try {
                const neoX = await fetch('https://mainnet.rpc.banelabs.org', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ jsonrpc: '2.0', method: 'eth_blockNumber', id: 1 })
                });
                if (neoX.ok) healthy++;
            } catch (e) {}

            const healthPercent = Math.round((healthy / total) * 100);
            const element = document.getElementById('network-health');
            if (element) element.textContent = `${healthPercent}%`;
        }

        async function checkAllServices() {
            const services = [
                'keymanagement', 'sgx', 'storage', 'compliance', 'zeroknowledge', 'backup',
                'prediction', 'patternrecognition', 'oracle', 'abstractaccount', 'voting',
                'crosschain', 'proofofreserve', 'compute', 'automation', 'notification',
                'randomness', 'fairordering', 'health', 'monitoring', 'configuration', 'eventsubscription'
            ];

            let onlineCount = 0;
            
            for (const service of services) {
                const isOnline = await checkService(service);
                if (isOnline) onlineCount++;
            }
            
            const element = document.getElementById('online-count');
            if (element) element.textContent = onlineCount;
        }

        async function checkService(serviceName) {
            const statusElement = document.getElementById(`${serviceName}-status`);
            if (!statusElement) return false;

            try {
                const response = await fetch(`/api/${serviceName}/health`);
                
                if (response.ok) {
                    statusElement.className = 'status online';
                    statusElement.innerHTML = '<div class="indicator online"></div>Online';
                    return true;
                } else {
                    statusElement.className = 'status offline';
                    statusElement.innerHTML = '<div class="indicator offline"></div>Offline';
                    return false;
                }
            } catch (error) {
                statusElement.className = 'status offline';
                statusElement.innerHTML = '<div class="indicator offline"></div>Error';
                return false;
            }
        }

        console.log('🚀 Neo Service Ecosystem UI loaded');
    </script>
</body>
</html> 