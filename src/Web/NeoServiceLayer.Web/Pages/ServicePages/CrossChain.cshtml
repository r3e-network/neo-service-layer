@page "/servicepages/crosschain"
@model NeoServiceLayer.Web.Pages.ServicePages.CrossChainModel
@{
    ViewData["Title"] = "Cross-Chain Service";
    Model.OnGet();
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - Neo Service Layer</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        .header-gradient {
            background: linear-gradient(135deg, #17a2b8 0%, #20c997 100%);
            color: white;
        }
        .service-card {
            transition: all 0.3s ease;
            border: 1px solid #dee2e6;
            border-radius: 10px;
            background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
        }
        .service-card:hover {
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }
        .feature-icon {
            font-size: 3rem;
            color: #17a2b8;
        }
        .status-indicator {
            width: 12px;
            height: 12px;
            border-radius: 50%;
            display: inline-block;
            margin-right: 8px;
        }
        .status-online {
            background-color: #28a745;
        }
        .status-offline {
            background-color: #dc3545;
        }
        .status-checking {
            background-color: #ffc107;
        }
        .bridge-card {
            border-left: 4px solid #17a2b8;
            transition: all 0.2s ease;
        }
        .bridge-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        }
        .chain-network {
            display: inline-block;
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 0.8rem;
            font-weight: bold;
            margin-right: 5px;
        }
        .neo-network {
            background-color: #00e599;
            color: #000;
        }
        .ethereum-network {
            background-color: #627eea;
            color: #fff;
        }
        .bitcoin-network {
            background-color: #f7931a;
            color: #fff;
        }
        .transfer-status {
            padding: 2px 8px;
            border-radius: 12px;
            font-size: 0.8rem;
        }
    </style>
</head>
<body>
    <!-- Header -->
    <div class="header-gradient py-4 mb-4">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-md-8">
                    <h1 class="display-5 mb-0">
                        <i class="@Model.ServiceIcon me-3"></i>@Model.ServiceDisplayName
                    </h1>
                    <p class="lead mb-0">@Model.ServiceSubtitle</p>
                </div>
                <div class="col-md-4 text-end">
                    <div class="d-flex align-items-center justify-content-end">
                        <span id="service-status" class="badge bg-warning me-3">
                            <span class="status-indicator status-checking"></span>Checking...
                        </span>
                        <a href="/services" class="btn btn-light btn-sm me-2">
                            <i class="fas fa-arrow-left me-1"></i>Services
                        </a>
                        <a href="/" class="btn btn-light btn-sm">
                            <i class="fas fa-home me-1"></i>Home
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <div class="row">
            <!-- Service Information -->
            <div class="col-md-4 mb-4">
                <div class="card service-card h-100">
                    <div class="card-header">
                        <h5 class="mb-0">
                            <i class="fas fa-info-circle me-2"></i>Service Information
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="text-center mb-3">
                            <i class="@Model.ServiceIcon feature-icon"></i>
                        </div>
                        <h6 class="card-title">@Model.ServiceDisplayName</h6>
                        <p class="card-text small">@Model.ServiceDescription</p>
                        
                        <hr>
                        
                        <h6>Service Details</h6>
                        <ul class="list-unstyled small">
                            <li><strong>Type:</strong> @Model.ServiceType</li>
                            <li><strong>Layer:</strong> @Model.ServiceLayer</li>
                            <li><strong>Security:</strong> SGX Enclave</li>
                            <li><strong>API Version:</strong> v1.0</li>
                        </ul>

                        <h6>Key Features</h6>
                        <ul class="list-unstyled small">
                            @foreach (var feature in Model.ServiceFeatures)
                            {
                                <li><i class="fas fa-check text-success me-2"></i>@feature</li>
                            }
                        </ul>

                        <hr>

                        <h6>Supported Networks</h6>
                        <div class="mb-2">
                            <span class="chain-network neo-network">NEO N3</span>
                            <span class="chain-network ethereum-network">Ethereum</span>
                        </div>
                        <div class="mb-2">
                            <span class="chain-network bitcoin-network">Bitcoin</span>
                            <span class="chain-network" style="background-color: #1e88e5; color: white;">Polygon</span>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Interactive Controls -->
            <div class="col-md-8">
                <div class="card">
                    <div class="card-header">
                        <ul class="nav nav-tabs card-header-tabs" id="service-tabs" role="tablist">
                            <li class="nav-item" role="presentation">
                                <button class="nav-link active" id="status-tab" data-bs-toggle="tab" data-bs-target="#status" type="button" role="tab">
                                    <i class="fas fa-heartbeat me-2"></i>Status & Health
                                </button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="nav-link" id="bridges-tab" data-bs-toggle="tab" data-bs-target="#bridges" type="button" role="tab">
                                    <i class="fas fa-exchange-alt me-2"></i>Bridges
                                </button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="nav-link" id="transfer-tab" data-bs-toggle="tab" data-bs-target="#transfer" type="button" role="tab">
                                    <i class="fas fa-paper-plane me-2"></i>Transfer Assets
                                </button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="nav-link" id="operations-tab" data-bs-toggle="tab" data-bs-target="#operations" type="button" role="tab">
                                    <i class="fas fa-cogs me-2"></i>Operations
                                </button>
                            </li>
                        </ul>
                    </div>
                    <div class="card-body">
                        <div class="tab-content" id="service-tabContent">
                            <!-- Status Tab -->
                            <div class="tab-pane fade show active" id="status" role="tabpanel">
                                <h5>Service Status</h5>
                                <div class="row g-3 mb-4">
                                    <div class="col-md-6">
                                        <div class="card bg-light">
                                            <div class="card-body text-center">
                                                <i class="fas fa-server text-primary fa-2x mb-2"></i>
                                                <h6>Service Health</h6>
                                                <span id="health-status" class="badge bg-warning">Checking...</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="card bg-light">
                                            <div class="card-body text-center">
                                                <i class="fas fa-shield-alt text-success fa-2x mb-2"></i>
                                                <h6>Enclave Status</h6>
                                                <span id="enclave-status" class="badge bg-warning">Checking...</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="row g-3 mb-4">
                                    <div class="col-md-3">
                                        <div class="card bg-light">
                                            <div class="card-body text-center">
                                                <i class="fas fa-link text-info fa-2x mb-2"></i>
                                                <h6>Active Bridges</h6>
                                                <h4 id="active-bridges">-</h4>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="card bg-light">
                                            <div class="card-body text-center">
                                                <i class="fas fa-exchange-alt text-warning fa-2x mb-2"></i>
                                                <h6>Daily Transfers</h6>
                                                <h4 id="daily-transfers">-</h4>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="card bg-light">
                                            <div class="card-body text-center">
                                                <i class="fas fa-dollar-sign text-success fa-2x mb-2"></i>
                                                <h6>Volume 24h</h6>
                                                <h4 id="volume-24h">-</h4>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="card bg-light">
                                            <div class="card-body text-center">
                                                <i class="fas fa-clock text-secondary fa-2x mb-2"></i>
                                                <h6>Uptime</h6>
                                                <h4 id="uptime">-</h4>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <button class="btn btn-primary" onclick="checkServiceHealth()">
                                    <i class="fas fa-sync-alt me-2"></i>Refresh Status
                                </button>
                            </div>

                            <!-- Bridges Tab -->
                            <div class="tab-pane fade" id="bridges" role="tabpanel">
                                <div class="d-flex justify-content-between align-items-center mb-4">
                                    <h5>Cross-Chain Bridges</h5>
                                    <button class="btn btn-success" onclick="createBridge()">
                                        <i class="fas fa-plus me-1"></i>Create Bridge
                                    </button>
                                </div>
                                
                                <div id="bridges-list">
                                    <!-- Bridges will be populated here -->
                                </div>
                            </div>

                            <!-- Transfer Assets Tab -->
                            <div class="tab-pane fade" id="transfer" role="tabpanel">
                                <h5>Cross-Chain Asset Transfer</h5>
                                
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="card">
                                            <div class="card-header">
                                                <h6 class="mb-0">From Network</h6>
                                            </div>
                                            <div class="card-body">
                                                <div class="mb-3">
                                                    <label class="form-label">Source Chain</label>
                                                    <select class="form-select" id="source-chain">
                                                        <option value="neo">NEO N3</option>
                                                        <option value="ethereum">Ethereum</option>
                                                        <option value="bitcoin">Bitcoin</option>
                                                        <option value="polygon">Polygon</option>
                                                    </select>
                                                </div>
                                                <div class="mb-3">
                                                    <label class="form-label">Asset</label>
                                                    <select class="form-select" id="source-asset">
                                                        <option value="neo">NEO</option>
                                                        <option value="gas">GAS</option>
                                                        <option value="usdt">USDT</option>
                                                    </select>
                                                </div>
                                                <div class="mb-3">
                                                    <label class="form-label">Amount</label>
                                                    <input type="number" class="form-control" id="transfer-amount" placeholder="0.00">
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="card">
                                            <div class="card-header">
                                                <h6 class="mb-0">To Network</h6>
                                            </div>
                                            <div class="card-body">
                                                <div class="mb-3">
                                                    <label class="form-label">Destination Chain</label>
                                                    <select class="form-select" id="dest-chain">
                                                        <option value="ethereum">Ethereum</option>
                                                        <option value="neo">NEO N3</option>
                                                        <option value="polygon">Polygon</option>
                                                        <option value="bitcoin">Bitcoin</option>
                                                    </select>
                                                </div>
                                                <div class="mb-3">
                                                    <label class="form-label">Recipient Address</label>
                                                    <input type="text" class="form-control" id="recipient-address" placeholder="Enter destination address">
                                                </div>
                                                <div class="mb-3">
                                                    <label class="form-label">Estimated Fee</label>
                                                    <input type="text" class="form-control" id="estimated-fee" readonly value="~ 0.005 ETH">
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="text-center mt-4">
                                    <button class="btn btn-primary btn-lg" onclick="initiateTransfer()">
                                        <i class="fas fa-exchange-alt me-2"></i>Initiate Cross-Chain Transfer
                                    </button>
                                </div>
                            </div>

                            <!-- Operations Tab -->
                            <div class="tab-pane fade" id="operations" role="tabpanel">
                                <h5>@Model.ServiceDisplayName Operations</h5>
                                
                                <div class="row g-3 mb-4">
                                    @foreach (var operation in Model.ServiceOperations)
                                    {
                                        <div class="col-md-6">
                                            <div class="card">
                                                <div class="card-body">
                                                    <h6><i class="fas fa-play-circle me-2"></i>@operation</h6>
                                                    <button class="btn btn-outline-primary btn-sm" onclick="executeOperation('@operation')">
                                                        Execute
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            checkServiceHealth();
            loadBridges();
        });

        async function checkServiceHealth() {
            try {
                updateServiceStatus('checking');
                
                // Simulate API call
                await new Promise(resolve => setTimeout(resolve, 1000 + Math.random() * 1000));
                
                const isHealthy = Math.random() > 0.1;
                
                if (isHealthy) {
                    updateServiceStatus('online');
                    document.getElementById('health-status').textContent = 'Healthy';
                    document.getElementById('health-status').className = 'badge bg-success';
                    document.getElementById('enclave-status').textContent = 'Active';
                    document.getElementById('enclave-status').className = 'badge bg-success';
                    
                    // Update metrics
                    document.getElementById('active-bridges').textContent = Math.floor(Math.random() * 10 + 5);
                    document.getElementById('daily-transfers').textContent = Math.floor(Math.random() * 500 + 100);
                    document.getElementById('volume-24h').textContent = '$' + (Math.random() * 1000000).toFixed(0);
                    document.getElementById('uptime').textContent = Math.floor(Math.random() * 30 + 1) + 'd';
                } else {
                    updateServiceStatus('offline');
                    document.getElementById('health-status').textContent = 'Unhealthy';
                    document.getElementById('health-status').className = 'badge bg-danger';
                    document.getElementById('enclave-status').textContent = 'Inactive';
                    document.getElementById('enclave-status').className = 'badge bg-danger';
                }
            } catch (error) {
                console.error('Error checking service health:', error);
                updateServiceStatus('offline');
            }
        }

        function updateServiceStatus(status) {
            const statusElement = document.getElementById('service-status');
            
            switch (status) {
                case 'online':
                    statusElement.innerHTML = '<span class="status-indicator status-online"></span>Online';
                    statusElement.className = 'badge bg-success me-3';
                    break;
                case 'offline':
                    statusElement.innerHTML = '<span class="status-indicator status-offline"></span>Offline';
                    statusElement.className = 'badge bg-danger me-3';
                    break;
                case 'checking':
                    statusElement.innerHTML = '<span class="status-indicator status-checking"></span>Checking...';
                    statusElement.className = 'badge bg-warning me-3';
                    break;
            }
        }

        function loadBridges() {
            const bridgesContainer = document.getElementById('bridges-list');
            const bridges = [
                { id: 1, from: 'NEO N3', to: 'Ethereum', status: 'Active', volume: '$1.2M', transfers: 1250 },
                { id: 2, from: 'Ethereum', to: 'NEO N3', status: 'Active', volume: '$980K', transfers: 890 },
                { id: 3, from: 'NEO N3', to: 'Polygon', status: 'Active', volume: '$650K', transfers: 445 },
                { id: 4, from: 'Bitcoin', to: 'NEO N3', status: 'Maintenance', volume: '$2.1M', transfers: 234 }
            ];

            bridgesContainer.innerHTML = bridges.map(bridge => `
                <div class="card bridge-card mb-3">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <h6 class="mb-1">${bridge.from} ↔ ${bridge.to}</h6>
                                <small class="text-muted">24h Volume: ${bridge.volume} | Transfers: ${bridge.transfers}</small>
                            </div>
                            <div class="d-flex align-items-center">
                                <span class="badge bg-${bridge.status === 'Active' ? 'success' : 'warning'} me-2">${bridge.status}</span>
                                <div class="btn-group btn-group-sm">
                                    <button class="btn btn-outline-primary" onclick="viewBridge(${bridge.id})">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                    <button class="btn btn-outline-secondary" onclick="manageBridge(${bridge.id})">
                                        <i class="fas fa-cog"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            `).join('');
        }

        function createBridge() {
            alert('Opening bridge creation wizard...');
        }

        function viewBridge(id) {
            alert(`Viewing bridge ${id} details...`);
        }

        function manageBridge(id) {
            alert(`Managing bridge ${id}...`);
        }

        function initiateTransfer() {
            const sourceChain = document.getElementById('source-chain').value;
            const destChain = document.getElementById('dest-chain').value;
            const amount = document.getElementById('transfer-amount').value;
            const recipient = document.getElementById('recipient-address').value;

            if (!amount || !recipient) {
                alert('Please fill in all transfer details.');
                return;
            }

            if (sourceChain === destChain) {
                alert('Source and destination chains must be different.');
                return;
            }

            alert(`Initiating transfer of ${amount} from ${sourceChain} to ${destChain}...\nRecipient: ${recipient}`);
        }

        async function executeOperation(operation) {
            try {
                console.log('Executing operation:', operation);
                alert(`Executing ${operation} operation...`);
            } catch (error) {
                console.error('Error executing operation:', error);
            }
        }
    </script>
</body>
</html> 