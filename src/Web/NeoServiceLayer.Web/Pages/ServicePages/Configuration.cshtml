@page "/servicepages/configuration"
@model NeoServiceLayer.Web.Pages.ServicePages.ConfigurationModel
@{
    ViewData["Title"] = "Configuration Service";
    Model.OnGet();
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - Neo Service Layer</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        .header-gradient {
            background: linear-gradient(135deg, #343a40 0%, #6c757d 100%);
            color: white;
        }
        .service-card {
            transition: all 0.3s ease;
            border: 1px solid #dee2e6;
            border-radius: 10px;
            background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
        }
        .service-card:hover {
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }
        .feature-icon {
            font-size: 3rem;
            color: #343a40;
        }
        .status-indicator {
            width: 12px;
            height: 12px;
            border-radius: 50%;
            display: inline-block;
            margin-right: 8px;
        }
        .status-online {
            background-color: #28a745;
        }
        .status-offline {
            background-color: #dc3545;
        }
        .status-checking {
            background-color: #ffc107;
        }
        .config-section {
            border: 1px solid #dee2e6;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 15px;
        }
        .config-item {
            padding: 8px 0;
            border-bottom: 1px solid #f8f9fa;
        }
        .config-item:last-child {
            border-bottom: none;
        }
    </style>
</head>
<body>
    <!-- Header -->
    <div class="header-gradient py-4 mb-4">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-md-8">
                    <h1 class="display-5 mb-0">
                        <i class="@Model.ServiceIcon me-3"></i>@Model.ServiceDisplayName
                    </h1>
                    <p class="lead mb-0">@Model.ServiceSubtitle</p>
                </div>
                <div class="col-md-4 text-end">
                    <div class="d-flex align-items-center justify-content-end">
                        <span id="service-status" class="badge bg-warning me-3">
                            <span class="status-indicator status-checking"></span>Checking...
                        </span>
                        <a href="/services" class="btn btn-light btn-sm me-2">
                            <i class="fas fa-arrow-left me-1"></i>Services
                        </a>
                        <a href="/" class="btn btn-light btn-sm">
                            <i class="fas fa-home me-1"></i>Home
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <div class="row">
            <!-- Service Information -->
            <div class="col-md-4 mb-4">
                <div class="card service-card h-100">
                    <div class="card-header">
                        <h5 class="mb-0">
                            <i class="fas fa-info-circle me-2"></i>Service Information
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="text-center mb-3">
                            <i class="@Model.ServiceIcon feature-icon"></i>
                        </div>
                        <h6 class="card-title">@Model.ServiceDisplayName</h6>
                        <p class="card-text small">@Model.ServiceDescription</p>
                        
                        <hr>
                        
                        <h6>Service Details</h6>
                        <ul class="list-unstyled small">
                            <li><strong>Type:</strong> @Model.ServiceType</li>
                            <li><strong>Layer:</strong> @Model.ServiceLayer</li>
                            <li><strong>Security:</strong> SGX Enclave</li>
                            <li><strong>API Version:</strong> v1.0</li>
                        </ul>

                        <h6>Key Features</h6>
                        <ul class="list-unstyled small">
                            @foreach (var feature in Model.ServiceFeatures)
                            {
                                <li><i class="fas fa-check text-success me-2"></i>@feature</li>
                            }
                        </ul>
                    </div>
                </div>
            </div>

            <!-- Interactive Controls -->
            <div class="col-md-8">
                <div class="card">
                    <div class="card-header">
                        <ul class="nav nav-tabs card-header-tabs" id="service-tabs" role="tablist">
                            <li class="nav-item" role="presentation">
                                <button class="nav-link active" id="status-tab" data-bs-toggle="tab" data-bs-target="#status" type="button" role="tab">
                                    <i class="fas fa-heartbeat me-2"></i>Status & Health
                                </button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="nav-link" id="config-tab" data-bs-toggle="tab" data-bs-target="#config" type="button" role="tab">
                                    <i class="fas fa-cog me-2"></i>Configuration
                                </button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="nav-link" id="operations-tab" data-bs-toggle="tab" data-bs-target="#operations" type="button" role="tab">
                                    <i class="fas fa-tools me-2"></i>Operations
                                </button>
                            </li>
                        </ul>
                    </div>
                    <div class="card-body">
                        <div class="tab-content" id="service-tabContent">
                            <!-- Status Tab -->
                            <div class="tab-pane fade show active" id="status" role="tabpanel">
                                <h5>Service Status</h5>
                                <div class="row g-3 mb-4">
                                    <div class="col-md-6">
                                        <div class="card bg-light">
                                            <div class="card-body text-center">
                                                <i class="fas fa-server text-primary fa-2x mb-2"></i>
                                                <h6>Service Health</h6>
                                                <span id="health-status" class="badge bg-warning">Checking...</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="card bg-light">
                                            <div class="card-body text-center">
                                                <i class="fas fa-shield-alt text-success fa-2x mb-2"></i>
                                                <h6>Enclave Status</h6>
                                                <span id="enclave-status" class="badge bg-warning">Checking...</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <button class="btn btn-primary" onclick="checkServiceHealth()">
                                    <i class="fas fa-sync-alt me-2"></i>Refresh Status
                                </button>
                            </div>

                            <!-- Configuration Tab -->
                            <div class="tab-pane fade" id="config" role="tabpanel">
                                <h5>System Configuration</h5>
                                
                                <div class="config-section">
                                    <h6><i class="fas fa-network-wired me-2"></i>Network Settings</h6>
                                    <div class="config-item d-flex justify-content-between">
                                        <span>Neo Network</span>
                                        <select class="form-select form-select-sm w-25">
                                            <option>MainNet</option>
                                            <option>TestNet</option>
                                            <option>PrivateNet</option>
                                        </select>
                                    </div>
                                    <div class="config-item d-flex justify-content-between">
                                        <span>RPC Port</span>
                                        <input type="number" class="form-control form-control-sm w-25" value="10332">
                                    </div>
                                    <div class="config-item d-flex justify-content-between">
                                        <span>Max Connections</span>
                                        <input type="number" class="form-control form-control-sm w-25" value="100">
                                    </div>
                                </div>

                                <div class="config-section">
                                    <h6><i class="fas fa-shield-alt me-2"></i>Security Settings</h6>
                                    <div class="config-item d-flex justify-content-between">
                                        <span>SGX Mode</span>
                                        <select class="form-select form-select-sm w-25">
                                            <option>Hardware</option>
                                            <option>Simulation</option>
                                        </select>
                                    </div>
                                    <div class="config-item d-flex justify-content-between">
                                        <span>Enable Attestation</span>
                                        <div class="form-check form-switch">
                                            <input class="form-check-input" type="checkbox" checked>
                                        </div>
                                    </div>
                                    <div class="config-item d-flex justify-content-between">
                                        <span>Key Rotation (days)</span>
                                        <input type="number" class="form-control form-control-sm w-25" value="30">
                                    </div>
                                </div>

                                <div class="config-section">
                                    <h6><i class="fas fa-database me-2"></i>Storage Settings</h6>
                                    <div class="config-item d-flex justify-content-between">
                                        <span>Data Directory</span>
                                        <input type="text" class="form-control form-control-sm w-50" value="/data/neo">
                                    </div>
                                    <div class="config-item d-flex justify-content-between">
                                        <span>Auto Backup</span>
                                        <div class="form-check form-switch">
                                            <input class="form-check-input" type="checkbox" checked>
                                        </div>
                                    </div>
                                    <div class="config-item d-flex justify-content-between">
                                        <span>Max Log Size (MB)</span>
                                        <input type="number" class="form-control form-control-sm w-25" value="100">
                                    </div>
                                </div>

                                <button class="btn btn-success me-2" onclick="saveConfiguration()">
                                    <i class="fas fa-save me-1"></i>Save Configuration
                                </button>
                                <button class="btn btn-outline-secondary" onclick="resetConfiguration()">
                                    <i class="fas fa-undo me-1"></i>Reset to Defaults
                                </button>
                            </div>

                            <!-- Operations Tab -->
                            <div class="tab-pane fade" id="operations" role="tabpanel">
                                <h5>@Model.ServiceDisplayName Operations</h5>
                                
                                <div class="row g-3 mb-4">
                                    @foreach (var operation in Model.ServiceOperations)
                                    {
                                        <div class="col-md-6">
                                            <div class="card">
                                                <div class="card-body">
                                                    <h6><i class="fas fa-play-circle me-2"></i>@operation</h6>
                                                    <button class="btn btn-outline-primary btn-sm" onclick="executeOperation('@operation')">
                                                        Execute
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            checkServiceHealth();
        });

        async function checkServiceHealth() {
            try {
                updateServiceStatus('checking');
                
                await new Promise(resolve => setTimeout(resolve, 1000 + Math.random() * 1000));
                
                const isHealthy = Math.random() > 0.1;
                
                if (isHealthy) {
                    updateServiceStatus('online');
                    document.getElementById('health-status').textContent = 'Healthy';
                    document.getElementById('health-status').className = 'badge bg-success';
                    document.getElementById('enclave-status').textContent = 'Active';
                    document.getElementById('enclave-status').className = 'badge bg-success';
                } else {
                    updateServiceStatus('offline');
                    document.getElementById('health-status').textContent = 'Unhealthy';
                    document.getElementById('health-status').className = 'badge bg-danger';
                    document.getElementById('enclave-status').textContent = 'Inactive';
                    document.getElementById('enclave-status').className = 'badge bg-danger';
                }
            } catch (error) {
                console.error('Error checking service health:', error);
                updateServiceStatus('offline');
            }
        }

        function updateServiceStatus(status) {
            const statusElement = document.getElementById('service-status');
            
            switch (status) {
                case 'online':
                    statusElement.innerHTML = '<span class="status-indicator status-online"></span>Online';
                    statusElement.className = 'badge bg-success me-3';
                    break;
                case 'offline':
                    statusElement.innerHTML = '<span class="status-indicator status-offline"></span>Offline';
                    statusElement.className = 'badge bg-danger me-3';
                    break;
                case 'checking':
                    statusElement.innerHTML = '<span class="status-indicator status-checking"></span>Checking...';
                    statusElement.className = 'badge bg-warning me-3';
                    break;
            }
        }

        function saveConfiguration() {
            alert('Configuration saved successfully!');
        }

        function resetConfiguration() {
            if (confirm('Are you sure you want to reset all settings to defaults?')) {
                alert('Configuration reset to defaults.');
                location.reload();
            }
        }

        async function executeOperation(operation) {
            try {
                console.log('Executing operation:', operation);
                alert(`Executing ${operation} operation...`);
            } catch (error) {
                console.error('Error executing operation:', error);
            }
        }
    </script>
</body>
</html> 