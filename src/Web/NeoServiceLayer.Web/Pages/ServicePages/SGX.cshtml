@page "/servicepages/sgx"
@model NeoServiceLayer.Web.Pages.ServicePages.SGXModel
@{
    ViewData["Title"] = "SGX Enclave Service";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - Neo Service Layer</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        .header-gradient {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }
        .service-card {
            transition: all 0.3s ease;
            border: 1px solid #dee2e6;
            border-radius: 10px;
            background: linear-gradient(135deg, #f8f9fa 0%, #ffffff 100%);
        }
        .feature-icon {
            font-size: 3rem;
            color: #28a745;
        }
        .status-indicator {
            width: 12px;
            height: 12px;
            border-radius: 50%;
            display: inline-block;
            margin-right: 8px;
        }
        .status-online { background-color: #28a745; }
        .status-offline { background-color: #dc3545; }
        .status-checking { background-color: #ffc107; }
        .result-container {
            background-color: #f8f9fa;
            border-radius: 8px;
            border: 1px solid #dee2e6;
            max-height: 300px;
            overflow-y: auto;
        }
        .response-json {
            background-color: #2d3748;
            color: #e2e8f0;
            border-radius: 8px;
            font-family: 'Courier New', monospace;
        }
    </style>
</head>
<body>
    <!-- Header -->
    <div class="header-gradient py-4 mb-4">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-md-8">
                    <h1 class="display-5 mb-0">
                        <i class="fas fa-shield-alt me-3"></i>SGX Enclave Service
                    </h1>
                    <p class="lead mb-0">Trusted Execution Environment & Hardware Security</p>
                </div>
                <div class="col-md-4 text-end">
                    <div class="d-flex align-items-center justify-content-end">
                        <span id="service-status" class="badge bg-warning me-3">
                            <span class="status-indicator status-checking"></span>Checking...
                        </span>
                        <a href="/services" class="btn btn-light btn-sm me-2">
                            <i class="fas fa-arrow-left me-1"></i>Services
                        </a>
                        <a href="/" class="btn btn-light btn-sm">
                            <i class="fas fa-home me-1"></i>Home
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <div class="row">
            <!-- Service Information -->
            <div class="col-md-4 mb-4">
                <div class="card service-card h-100">
                    <div class="card-header">
                        <h5 class="mb-0">
                            <i class="fas fa-info-circle me-2"></i>Service Information
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="text-center mb-3">
                            <i class="fas fa-shield-alt feature-icon"></i>
                        </div>
                        <h6 class="card-title">SGX Enclave</h6>
                        <p class="card-text small">Intel Software Guard Extensions (SGX) trusted execution environment providing hardware-level security isolation.</p>
                        
                        <hr>
                        
                        <h6>Service Details</h6>
                        <ul class="list-unstyled small">
                            <li><strong>Type:</strong> Foundation Service</li>
                            <li><strong>Layer:</strong> Foundation</li>
                            <li><strong>Hardware:</strong> Intel SGX</li>
                            <li><strong>API Version:</strong> v1.0</li>
                            <li><strong>Mode:</strong> Simulation/Hardware</li>
                        </ul>

                        <h6>Security Features</h6>
                        <ul class="list-unstyled small">
                            <li><i class="fas fa-check text-success me-2"></i>Memory Encryption</li>
                            <li><i class="fas fa-check text-success me-2"></i>Remote Attestation</li>
                            <li><i class="fas fa-check text-success me-2"></i>Secure Boot</li>
                            <li><i class="fas fa-check text-success me-2"></i>Code Isolation</li>
                            <li><i class="fas fa-check text-success me-2"></i>Data Protection</li>
                        </ul>
                    </div>
                </div>
            </div>

            <!-- Interactive Controls -->
            <div class="col-md-8">
                <div class="card">
                    <div class="card-header">
                        <ul class="nav nav-tabs card-header-tabs" id="service-tabs" role="tablist">
                            <li class="nav-item" role="presentation">
                                <button class="nav-link active" id="status-tab" data-bs-toggle="tab" data-bs-target="#status" type="button" role="tab">
                                    <i class="fas fa-heartbeat me-2"></i>Enclave Status
                                </button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="nav-link" id="attestation-tab" data-bs-toggle="tab" data-bs-target="#attestation" type="button" role="tab">
                                    <i class="fas fa-certificate me-2"></i>Attestation
                                </button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="nav-link" id="operations-tab" data-bs-toggle="tab" data-bs-target="#operations" type="button" role="tab">
                                    <i class="fas fa-cogs me-2"></i>Operations
                                </button>
                            </li>
                        </ul>
                    </div>
                    <div class="card-body">
                        <div class="tab-content" id="service-tabContent">
                            <!-- Status Tab -->
                            <div class="tab-pane fade show active" id="status" role="tabpanel">
                                <h5>Enclave Status</h5>
                                <div class="row g-3 mb-4">
                                    <div class="col-md-6">
                                        <div class="card bg-light">
                                            <div class="card-body text-center">
                                                <i class="fas fa-microchip text-primary fa-2x mb-2"></i>
                                                <h6>Hardware Mode</h6>
                                                <span id="hardware-status" class="badge bg-warning">Checking...</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="card bg-light">
                                            <div class="card-body text-center">
                                                <i class="fas fa-shield-alt text-success fa-2x mb-2"></i>
                                                <h6>Enclave Running</h6>
                                                <span id="enclave-running" class="badge bg-warning">Checking...</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <button class="btn btn-primary" onclick="checkEnclaveStatus()">
                                    <i class="fas fa-sync-alt me-2"></i>Refresh Status
                                </button>

                                <div id="status-result" class="result-container mt-3 p-3" style="display: none;">
                                    <h6>Enclave Status Response</h6>
                                    <pre id="status-output" class="response-json p-3 mb-0"></pre>
                                </div>
                            </div>

                            <!-- Attestation Tab -->
                            <div class="tab-pane fade" id="attestation" role="tabpanel">
                                <h5>Remote Attestation</h5>
                                
                                <div class="card mb-3">
                                    <div class="card-body">
                                        <h6><i class="fas fa-certificate me-2"></i>Generate Quote</h6>
                                        <p class="small text-muted">Generate a cryptographic quote for remote verification</p>
                                        <button class="btn btn-success" onclick="generateQuote()">
                                            <i class="fas fa-file-contract me-2"></i>Generate Quote
                                        </button>
                                    </div>
                                </div>

                                <div id="attestation-result" class="result-container mt-3 p-3" style="display: none;">
                                    <h6>Attestation Response</h6>
                                    <pre id="attestation-output" class="response-json p-3 mb-0"></pre>
                                </div>
                            </div>

                            <!-- Operations Tab -->
                            <div class="tab-pane fade" id="operations" role="tabpanel">
                                <h5>Enclave Operations</h5>
                                
                                <div class="row g-3 mb-4">
                                    <div class="col-md-4">
                                        <div class="card bg-primary text-white">
                                            <div class="card-body text-center">
                                                <h4 id="total-operations">--</h4>
                                                <small>Total Operations</small>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="card bg-success text-white">
                                            <div class="card-body text-center">
                                                <h4 id="secure-calls">--</h4>
                                                <small>Secure Calls</small>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="card bg-info text-white">
                                            <div class="card-body text-center">
                                                <h4 id="memory-usage">--</h4>
                                                <small>Memory Usage</small>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <button class="btn btn-primary" onclick="refreshMetrics()">
                                    <i class="fas fa-sync-alt me-2"></i>Refresh Metrics
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            checkEnclaveStatus();
            refreshMetrics();
        });

        async function checkEnclaveStatus() {
            try {
                updateServiceStatus('checking');
                
                await new Promise(resolve => setTimeout(resolve, 1000));
                
                const isHealthy = Math.random() > 0.2;
                
                if (isHealthy) {
                    updateServiceStatus('online');
                    document.getElementById('hardware-status').textContent = 'Simulation Mode';
                    document.getElementById('hardware-status').className = 'badge bg-info';
                    document.getElementById('enclave-running').textContent = 'Active';
                    document.getElementById('enclave-running').className = 'badge bg-success';
                    
                    const statusResult = {
                        status: "running",
                        mode: "simulation",
                        timestamp: new Date().toISOString(),
                        version: "2.23.100.4",
                        uptime: "1d 8h 15m"
                    };
                    
                    document.getElementById('status-output').textContent = JSON.stringify(statusResult, null, 2);
                    document.getElementById('status-result').style.display = 'block';
                } else {
                    updateServiceStatus('offline');
                    document.getElementById('hardware-status').textContent = 'Not Available';
                    document.getElementById('hardware-status').className = 'badge bg-danger';
                    document.getElementById('enclave-running').textContent = 'Stopped';
                    document.getElementById('enclave-running').className = 'badge bg-danger';
                }
            } catch (error) {
                updateServiceStatus('offline');
            }
        }

        function updateServiceStatus(status) {
            const statusElement = document.getElementById('service-status');
            
            switch (status) {
                case 'online':
                    statusElement.innerHTML = '<span class="status-indicator status-online"></span>Online';
                    statusElement.className = 'badge bg-success me-3';
                    break;
                case 'offline':
                    statusElement.innerHTML = '<span class="status-indicator status-offline"></span>Offline';
                    statusElement.className = 'badge bg-danger me-3';
                    break;
                case 'checking':
                    statusElement.innerHTML = '<span class="status-indicator status-checking"></span>Checking...';
                    statusElement.className = 'badge bg-warning me-3';
                    break;
            }
        }

        async function generateQuote() {
            try {
                await new Promise(resolve => setTimeout(resolve, 2000));
                
                const result = {
                    quote: "SGX_QUOTE_" + Math.random().toString(36).substr(2, 16),
                    measurement: "mr_enclave_" + Math.random().toString(36).substr(2, 32),
                    timestamp: new Date().toISOString(),
                    platform: "simulation",
                    valid: true
                };
                
                document.getElementById('attestation-output').textContent = JSON.stringify(result, null, 2);
                document.getElementById('attestation-result').style.display = 'block';
            } catch (error) {
                console.error('Error generating quote:', error);
            }
        }

        async function refreshMetrics() {
            try {
                await new Promise(resolve => setTimeout(resolve, 500));
                
                document.getElementById('total-operations').textContent = Math.floor(Math.random() * 10000) + 5000;
                document.getElementById('secure-calls').textContent = Math.floor(Math.random() * 5000) + 2000;
                document.getElementById('memory-usage').textContent = Math.floor(Math.random() * 80) + 20 + '%';
            } catch (error) {
                console.error('Error refreshing metrics:', error);
            }
        }
    </script>
</body>
</html> 