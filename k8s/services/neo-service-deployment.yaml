apiVersion: apps/v1
kind: Deployment
metadata:
  name: neo-service-layer
  namespace: neo-service-layer
  labels:
    app: neo-service-layer
    component: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: neo-service-layer
      component: api
  template:
    metadata:
      labels:
        app: neo-service-layer
        component: api
    spec:
      containers:
      - name: neo-service-layer
        image: neo-service-layer:latest
        ports:
        - containerPort: 5000
          name: http
        - containerPort: 5001
          name: https
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: "Production"
        - name: ASPNETCORE_URLS
          value: "https://+:5001;http://+:5000"
        - name: ConnectionStrings__PostgreSQL
          valueFrom:
            secretKeyRef:
              name: neo-postgres-secret
              key: CONNECTION_STRING
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: neo-app-secret
              key: JWT_SECRET_KEY
        - name: Database__CommandTimeout
          value: "30"
        - name: Database__EnableRetryOnFailure
          value: "true"
        - name: Database__MaxRetryCount
          value: "3"
        - name: Database__MaxRetryDelay
          value: "00:00:30"
        - name: Database__EnableSensitiveDataLogging
          value: "false"
        - name: Database__EnableDetailedErrors
          value: "false"
        - name: Security__RequireHttps
          value: "true"
        - name: Security__EnableApiKeyAuthentication
          value: "true"
        - name: RateLimit__ApiRateLimit__PermitLimit
          value: "1000"
        - name: RateLimit__ApiRateLimit__WindowMinutes
          value: "1"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 5000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
        - name: app-data
          mountPath: /app/data
        - name: app-logs
          mountPath: /app/logs
      volumes:
      - name: app-data
        emptyDir: {}
      - name: app-logs
        emptyDir: {}
      initContainers:
      - name: wait-for-postgres
        image: busybox:1.36
        command: ['sh', '-c']
        args:
        - |
          echo "Waiting for PostgreSQL to be ready..."
          until nc -z neo-postgres-external 5432; do
            echo "PostgreSQL is not ready - sleeping"
            sleep 2
          done
          echo "PostgreSQL is ready!"
---
apiVersion: v1
kind: Service
metadata:
  name: neo-service-layer-service
  namespace: neo-service-layer
  labels:
    app: neo-service-layer
    component: api
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 5000
    name: http
  - port: 443
    targetPort: 5001
    name: https
  selector:
    app: neo-service-layer
    component: api
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: neo-service-layer-ingress
  namespace: neo-service-layer
  labels:
    app: neo-service-layer
    component: api
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/rate-limit: "1000"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  tls:
  - hosts:
    - api.neo-service-layer.com
    secretName: neo-service-layer-tls
  rules:
  - host: api.neo-service-layer.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: neo-service-layer-service
            port:
              number: 80