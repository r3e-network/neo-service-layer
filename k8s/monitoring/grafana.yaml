apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: neo-monitoring
  labels:
    app: grafana
data:
  prometheus.yaml: |
    apiVersion: 1
    datasources:
    - name: Prometheus
      type: prometheus
      access: proxy
      url: http://neo-prometheus.neo-monitoring.svc.cluster.local:9090
      isDefault: true
      editable: true
    - name: Jaeger
      type: jaeger
      access: proxy
      url: http://jaeger-query.neo-monitoring.svc.cluster.local:16686
      uid: jaeger
      editable: true

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards-config
  namespace: neo-monitoring
  labels:
    app: grafana
data:
  dashboards.yaml: |
    apiVersion: 1
    providers:
    - name: 'default'
      orgId: 1
      folder: 'Neo Services'
      type: file
      disableDeletion: false
      updateIntervalSeconds: 10
      allowUiUpdates: true
      options:
        path: /var/lib/grafana/dashboards

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-overview
  namespace: neo-monitoring
  labels:
    app: grafana
    dashboard: overview
data:
  neo-services-overview.json: |
    {
      "dashboard": {
        "id": null,
        "title": "Neo Services Overview",
        "tags": ["neo", "microservices"],
        "timezone": "browser",
        "panels": [
          {
            "id": 1,
            "title": "Service Uptime",
            "type": "stat",
            "targets": [
              {
                "expr": "avg(up{job=~\"neo-.*-service\"})",
                "legendFormat": "Average Uptime"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "thresholds"
                },
                "thresholds": {
                  "steps": [
                    {"color": "red", "value": 0},
                    {"color": "yellow", "value": 0.8},
                    {"color": "green", "value": 0.95}
                  ]
                },
                "unit": "percentunit"
              }
            },
            "gridPos": {"h": 8, "w": 6, "x": 0, "y": 0}
          },
          {
            "id": 2,
            "title": "Request Rate",
            "type": "graph",
            "targets": [
              {
                "expr": "sum(rate(http_requests_total{job=~\"neo-.*-service\"}[5m])) by (job)",
                "legendFormat": "{{job}}"
              }
            ],
            "yAxes": [
              {"label": "req/sec", "min": 0}
            ],
            "gridPos": {"h": 8, "w": 12, "x": 6, "y": 0}
          },
          {
            "id": 3,
            "title": "Response Time (95th percentile)",
            "type": "graph",
            "targets": [
              {
                "expr": "histogram_quantile(0.95, rate(http_request_duration_seconds_bucket{job=~\"neo-.*-service\"}[5m]))",
                "legendFormat": "{{job}}"
              }
            ],
            "yAxes": [
              {"label": "seconds", "min": 0}
            ],
            "gridPos": {"h": 8, "w": 6, "x": 18, "y": 0}
          },
          {
            "id": 4,
            "title": "Error Rate",
            "type": "graph",
            "targets": [
              {
                "expr": "sum(rate(http_requests_total{job=~\"neo-.*-service\",code=~\"5..\"}[5m])) by (job) / sum(rate(http_requests_total{job=~\"neo-.*-service\"}[5m])) by (job)",
                "legendFormat": "{{job}}"
              }
            ],
            "yAxes": [
              {"label": "error rate", "min": 0, "max": 1}
            ],
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 8}
          },
          {
            "id": 5,
            "title": "Database Connections",
            "type": "graph",
            "targets": [
              {
                "expr": "pg_stat_database_numbackends{datname!=\"template0\",datname!=\"template1\"}",
                "legendFormat": "{{datname}}"
              }
            ],
            "yAxes": [
              {"label": "connections", "min": 0}
            ],
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 8}
          }
        ],
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "refresh": "30s"
      }
    }

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-auth
  namespace: neo-monitoring
  labels:
    app: grafana
    dashboard: auth
data:
  neo-auth-service.json: |
    {
      "dashboard": {
        "id": null,
        "title": "Neo Authentication Service",
        "tags": ["neo", "auth", "security"],
        "panels": [
          {
            "id": 1,
            "title": "Login Attempts",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(neo_auth_login_attempts_total[5m])",
                "legendFormat": "{{status}}"
              }
            ],
            "yAxes": [
              {"label": "attempts/sec", "min": 0}
            ],
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 0}
          },
          {
            "id": 2,
            "title": "Active Sessions",
            "type": "stat",
            "targets": [
              {
                "expr": "neo_auth_active_sessions",
                "legendFormat": "Active Sessions"
              }
            ],
            "gridPos": {"h": 8, "w": 6, "x": 12, "y": 0}
          },
          {
            "id": 3,
            "title": "JWT Token Issuance Rate",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(neo_auth_tokens_issued_total[5m])",
                "legendFormat": "Tokens Issued"
              }
            ],
            "yAxes": [
              {"label": "tokens/sec", "min": 0}
            ],
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 8}
          },
          {
            "id": 4,
            "title": "MFA Success Rate",
            "type": "stat",
            "targets": [
              {
                "expr": "rate(neo_auth_mfa_success_total[5m]) / rate(neo_auth_mfa_attempts_total[5m])",
                "legendFormat": "MFA Success Rate"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "unit": "percentunit"
              }
            },
            "gridPos": {"h": 8, "w": 6, "x": 12, "y": 8}
          }
        ],
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "refresh": "30s"
      }
    }

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-sgx
  namespace: neo-monitoring
  labels:
    app: grafana
    dashboard: sgx
data:
  neo-sgx-monitoring.json: |
    {
      "dashboard": {
        "id": null,
        "title": "Neo SGX Enclave Monitoring",
        "tags": ["neo", "sgx", "security", "compute"],
        "panels": [
          {
            "id": 1,
            "title": "Enclave Status",
            "type": "stat",
            "targets": [
              {
                "expr": "neo_sgx_enclave_status",
                "legendFormat": "{{enclave_id}} - {{status}}"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 0}
          },
          {
            "id": 2,
            "title": "Attestation Success Rate",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(neo_sgx_attestations_total{status=\"success\"}[5m]) / rate(neo_sgx_attestations_total[5m])",
                "legendFormat": "{{enclave_id}}"
              }
            ],
            "yAxes": [
              {"label": "success rate", "min": 0, "max": 1}
            ],
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 0}
          },
          {
            "id": 3,
            "title": "Secure Operations Rate",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(neo_sgx_operations_total[5m])",
                "legendFormat": "{{operation_type}}"
              }
            ],
            "yAxes": [
              {"label": "ops/sec", "min": 0}
            ],
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 8}
          },
          {
            "id": 4,
            "title": "Memory Usage (EPC)",
            "type": "graph",
            "targets": [
              {
                "expr": "neo_sgx_epc_memory_bytes_used / neo_sgx_epc_memory_bytes_total",
                "legendFormat": "{{enclave_id}}"
              }
            ],
            "yAxes": [
              {"label": "usage ratio", "min": 0, "max": 1}
            ],
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 8}
          }
        ],
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "refresh": "30s"
      }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: neo-monitoring
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      securityContext:
        runAsUser: 472
        runAsGroup: 472
        fsGroup: 472
        runAsNonRoot: true
      containers:
      - name: grafana
        image: grafana/grafana:10.2.0
        ports:
        - containerPort: 3000
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: grafana-secret
              key: admin-password
        - name: GF_INSTALL_PLUGINS
          value: "grafana-piechart-panel,grafana-worldmap-panel,flant-statusmap-panel"
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
        - name: grafana-datasources
          mountPath: /etc/grafana/provisioning/datasources
        - name: grafana-dashboards-config
          mountPath: /etc/grafana/provisioning/dashboards
        - name: grafana-dashboard-overview
          mountPath: /var/lib/grafana/dashboards/overview
        - name: grafana-dashboard-auth
          mountPath: /var/lib/grafana/dashboards/auth
        - name: grafana-dashboard-sgx
          mountPath: /var/lib/grafana/dashboards/sgx
        resources:
          requests:
            memory: 512Mi
            cpu: 250m
          limits:
            memory: 1Gi
            cpu: 500m
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 5
          timeoutSeconds: 5
      volumes:
      - name: grafana-storage
        persistentVolumeClaim:
          claimName: grafana-pvc
      - name: grafana-datasources
        configMap:
          name: grafana-datasources
      - name: grafana-dashboards-config
        configMap:
          name: grafana-dashboards-config
      - name: grafana-dashboard-overview
        configMap:
          name: grafana-dashboard-overview
      - name: grafana-dashboard-auth
        configMap:
          name: grafana-dashboard-auth
      - name: grafana-dashboard-sgx
        configMap:
          name: grafana-dashboard-sgx

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
  namespace: neo-monitoring
  labels:
    app: grafana
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: fast-ssd

---
apiVersion: v1
kind: Secret
metadata:
  name: grafana-secret
  namespace: neo-monitoring
  labels:
    app: grafana
type: Opaque
data:
  admin-password: bmVvLWdyYWZhbmEtcGFzc3dvcmQ=  # neo-grafana-password (base64)

---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: neo-monitoring
  labels:
    app: grafana
    monitoring: "true"
spec:
  selector:
    app: grafana
  ports:
  - name: http
    port: 3000
    targetPort: 3000
  type: ClusterIP

---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: grafana-vs
  namespace: neo-monitoring
spec:
  hosts:
  - "monitoring.neo-service-layer.com"
  gateways:
  - neo-infrastructure/neo-service-gateway
  http:
  - match:
    - uri:
        prefix: "/grafana"
    route:
    - destination:
        host: grafana
        port:
          number: 3000
    timeout: 30s