version: '3.8'

services:
  # SQL Server Database
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${SQL_PASSWORD:-Password123!}
      - TZ=UTC
    ports:
      - "1433:1433"
    volumes:
      - sqlserver-data:/var/opt/mssql
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "${SQL_PASSWORD:-Password123!}" -Q "SELECT 1" || exit 1
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s
    networks:
      - nsl-network
    deploy:
      resources:
        limits:
          memory: 4G

  # Redis for caching
  redis:
    image: redis:alpine
    command: redis-server --requirepass ${REDIS_PASSWORD:-Password123!}
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-Password123!}", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - nsl-network
    deploy:
      resources:
        limits:
          memory: 1G

  # Neo N3 Node
  neo-node:
    image: neo-project/neo-node:latest
    ports:
      - "10332:10332"
      - "10333:10333"
    volumes:
      - neo-node-data:/neo-cli/data
    networks:
      - nsl-network
    deploy:
      resources:
        limits:
          memory: 2G

  # TEE Host Service with SGX
  tee-host:
    build:
      context: .
      dockerfile: Dockerfile.tee-host-sim
    ports:
      - "5100:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=NeoServiceLayer;User=sa;Password=${SQL_PASSWORD:-Password123!};TrustServerCertificate=True
      - Redis__ConnectionString=redis:6379,password=${REDIS_PASSWORD:-Password123!}
      - Tee__SimulationMode=${OE_SIMULATION_MODE:-true}
      - Neo__RpcUrl=http://neo-node:10332
      - Neo__WalletPath=/app/data/neo-wallet.json
      - Neo__WalletPassword=${NEO_WALLET_PASSWORD:-password}
      - OE_SIMULATION=${OE_SIMULATION:-1}
    volumes:
      - ./data:/app/data
    depends_on:
      sqlserver:
        condition: service_healthy
      redis:
        condition: service_healthy
      neo-node:
        condition: service_started
    networks:
      - nsl-network
    deploy:
      resources:
        limits:
          memory: 2G

  # API Service
  api:
    build:
      context: .
      dockerfile: docker/openenclave/Dockerfile
    ports:
      - "5000:80"
      - "5001:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=NeoServiceLayer;User=sa;Password=${SQL_PASSWORD:-Password123!};TrustServerCertificate=True
      - Redis__ConnectionString=redis:6379,password=${REDIS_PASSWORD:-Password123!}
      - Tee__EnclaveHost=http://tee-host:80
      - Tee__SimulationMode=${OE_SIMULATION_MODE:-true}
      - Neo__RpcUrl=http://neo-node:10332
      - Neo__WalletPath=/app/data/neo-wallet.json
      - Neo__WalletPassword=${NEO_WALLET_PASSWORD:-password}
      - Jwt__Key=${JWT_KEY:-YourSecretKeyHere}
      - Jwt__Issuer=${JWT_ISSUER:-NeoServiceLayer}
      - Jwt__Audience=${JWT_AUDIENCE:-NeoServiceLayerClients}
      - OE_SIMULATION=${OE_SIMULATION:-1}
    volumes:
      - ./data:/app/data
    depends_on:
      sqlserver:
        condition: service_healthy
      redis:
        condition: service_healthy
      tee-host:
        condition: service_started
    networks:
      - nsl-network
    deploy:
      resources:
        limits:
          memory: 2G
      replicas: 2

networks:
  nsl-network:
    driver: bridge

volumes:
  sqlserver-data:
  redis-data:
  neo-node-data:
